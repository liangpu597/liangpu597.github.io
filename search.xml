<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>QT学习之滚动字幕</title>
      <link href="/2020/08/13/QT%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%BB%9A%E5%8A%A8%E5%AD%97%E5%B9%95/"/>
      <url>/2020/08/13/QT%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%BB%9A%E5%8A%A8%E5%AD%97%E5%B9%95/</url>
      
        <content type="html"><![CDATA[<p>在设计Qt的时候，有时候想要滚动文本框之内的。而常见的QLabel里面没有这个，需要我们重写后，然后把这个QLabel直接进行提升就行了。<br>1.首先新建一个QWidget的工程，继承QWidget<br>2.sources下新建C++ class  起好名字，会有一个同名的.h 和.cpp文件 这里我取得是roll 那么这个类的名字就叫做roll</p><p>roll.h</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#ifndef ROLL_H</span><br><span class="line">#define ROLL_H</span><br><span class="line"></span><br><span class="line">#include&lt;QtWidgets&#x2F;QLabel&gt;</span><br><span class="line"></span><br><span class="line">class roll: public QLabel</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    roll(QWidget *parent &#x3D; nullptr);          </span><br><span class="line">    ~roll();</span><br><span class="line"></span><br><span class="line">protected:</span><br><span class="line">    void paintEvent(QPaintEvent *);</span><br><span class="line">    void updateIndex();</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    int m_charWidth;</span><br><span class="line">    int m_curIndex;</span><br><span class="line">    QString m_showText;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    QString getText()</span><br><span class="line">    &#123;</span><br><span class="line">        return m_showText;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">#endif &#x2F;&#x2F; ROLL_H</span><br></pre></td></tr></table></figure><p>roll.cpp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;roll.h&quot;</span><br><span class="line">#include&lt;QPainter&gt;</span><br><span class="line">#include&lt;QTimer&gt;</span><br><span class="line">#include&lt;QDebug&gt;</span><br><span class="line"></span><br><span class="line">roll::roll(QWidget *parent): QLabel(parent)    &#x2F;&#x2F;按照网上的教程 是说roll继承了QLabel那么就需要在初始化的时候给QLabel也传递参数过去</span><br><span class="line">&#123;                                               &#x2F;&#x2F;传递的参数是在自己的构造函数里就要写好：QWidget *parent &#x3D; nullptr</span><br><span class="line">                                                &#x2F;&#x2F;把这个参数 传递给QLabel 的parent变量 在C++中，父类初始化的时候只能这样来</span><br><span class="line"></span><br><span class="line">    m_curIndex &#x3D;0;          &#x2F;&#x2F;当前文字下标值</span><br><span class="line">    &#x2F;&#x2F;m_showText&#x3D;tr(&quot;This is a textTicker Text!&quot;);</span><br><span class="line">    &#x2F;&#x2F;m_showText &#x3D; tr(&quot;在文本框中输入内容后 勾选选项 自动更改文本框内容样式&quot;);</span><br><span class="line">    m_showText &#x3D; QString(&quot;在一般情况下子类继承了父类那么子类就可以对父类的方法进行调用甚至是重写这样子类对象就继承了父类对象&quot;);</span><br><span class="line">    m_charWidth &#x3D; fontMetrics().width(&quot;在&quot;);   &#x2F;&#x2F;获取到一个字符的宽度</span><br><span class="line">    qDebug()&lt;&lt;fontMetrics().width(&quot;ad&quot;)&lt;&lt;endl;    &#x2F;&#x2F;这样打印出来是6 如果是 汉字的话就是12</span><br><span class="line">    &#x2F;&#x2F;Qtimer的常规做法 start(100)是每隔1毫秒调用roll::updateIndex一次, 改变这个可以显著改变移动的速度</span><br><span class="line">    QTimer *timer &#x3D; new QTimer(this);</span><br><span class="line">    connect(timer, &amp;QTimer::timeout, this, &amp;roll::updateIndex);</span><br><span class="line">    timer-&gt;start(100);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">roll::~roll()</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;paintEvent 是QWidget中的虚函数 用于画图 现在把它重写</span><br><span class="line">void roll::paintEvent(QPaintEvent *)</span><br><span class="line">&#123;</span><br><span class="line">    QPen pen;            &#x2F;&#x2F;QPen类，定义了一个QPainter应该如何画线和图形的轮廓 详细的参见博客</span><br><span class="line">    pen.setColor(QColor(255,0,255));    &#x2F;&#x2F;设置线条的颜色</span><br><span class="line">    pen.setStyle(Qt::DashDotDotLine);    &#x2F;&#x2F;一个短线，两个点，一个短线，两个点</span><br><span class="line"></span><br><span class="line">    QPainter painter(this);</span><br><span class="line">    painter.setPen(pen);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    QFont font(&quot;楷体&quot;,14,QFont::Bold);</span><br><span class="line">    painter.setFont(font);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;painter 可以绘制 点 直线 矩形 圆形 椭圆 扇形 文本 这里是文本</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;查阅官方的发现使用的是这个重载drawText(int x, int y, const QString &amp;text)</span><br><span class="line">    &#x2F;&#x2F;这个是从x y的位置上开始绘画文本 但是这里搞不懂 这个位置如果是全局位置的话， 那么就跟后面的label的位置没有关系了</span><br><span class="line">    &#x2F;&#x2F;可是它还是会一直在label里面 不会超出这个label</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;painter.drawText(rect(),Qt::AlignCenter,m_showText.mid(m_curIndex));    &#x2F;&#x2F;比如这个本来是在屏幕正中央来的，但是这里好像还是在label内</span><br><span class="line">    &#x2F;&#x2F;painter.drawText(0,25,m_showText.mid(m_curIndex));</span><br><span class="line">    &#x2F;&#x2F;这个mid函数就是一个截取函数mid(start, num)从字符串start下标开始，截取num个字符。num默认是-1表示从start后一直到末尾 不改变原字符</span><br><span class="line">    &#x2F;&#x2F;还有个函数replace(),这个改变原字符</span><br><span class="line">    &#x2F;&#x2F;qDebug()&lt;&lt;m_showText.mid(m_curIndex)&lt;&lt;endl;   &#x2F;&#x2F;这里是全部打印，印证了上面的猜测,然后我们需要更新</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;然后我们需要更新，让其滚动的效果，也就是说，每次的索引增加，这样，相当于前面的不打印，造成一种滚动的假象</span><br><span class="line">    &#x2F;&#x2F;painter.drawText(width() - m_charWidth * m_curIndex, 15, m_showText.left(m_curIndex));</span><br><span class="line">    &#x2F;&#x2F;qDebug()&lt;&lt;width()&lt;&lt;endl; 打印451，也就是label的宽度</span><br><span class="line">    &#x2F;&#x2F;QString.left(n) 从左开始第n个</span><br><span class="line">    &#x2F;&#x2F;painter.drawText(103, 25, m_showText.left(29));</span><br><span class="line"></span><br><span class="line">    painter.drawText(width()-(m_charWidth+12) * m_curIndex, 25, m_showText.left(m_curIndex));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;qDebug()&lt;&lt;m_curIndex&lt;&lt;&quot;: 此时的值是：&quot;&lt;&lt;width()- m_charWidth * m_curIndex &lt;&lt;endl;</span><br><span class="line">    &#x2F;&#x2F;QString sg &#x3D; &quot;我 在&quot;;</span><br><span class="line">    &#x2F;&#x2F;qDebug()&lt;&lt;fontMetrics().width(sg)&lt;&lt;endl;</span><br><span class="line">    qDebug()&lt;&lt;m_curIndex&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">void roll::updateIndex()</span><br><span class="line">&#123;</span><br><span class="line">    update();</span><br><span class="line">    m_curIndex++;</span><br><span class="line">    if(m_curIndex&gt;52)</span><br><span class="line">    &#123;</span><br><span class="line">        m_curIndex &#x3D;0;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;*</span><br><span class="line">    if(m_curIndex* m_charWidth &gt; width())</span><br><span class="line">    &#123;</span><br><span class="line">        flag &#x3D;1;</span><br><span class="line">    &#125;</span><br><span class="line">    *&#x2F;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注：网上的版本是： update-&gt; : if m_curIndex * m_charwidth &gt; width<br>发现不能显示完全文字，原因是，虽然计算出了一个文字所占的像素，但是，文字与文字之间还存在间隔，间隔也要算。经过计算，一个文字的像素是12 一个空格的也是12 所以这里用的是24 这样的话， 会很快超出这个边框的边界，但是此时，文字还是没有显示完全。</p></blockquote><p>解决办法：在文本框边缘外部还是显示，只是用户看不到了罢了。这样可以显示完全了。<br>但是好像还是有问题，就是到后面，感觉尾巴一直在缩短的感觉，这个原因目前不知道怎么解决？</p>]]></content>
      
      
      
        <tags>
            
            <tag> Qt </tag>
            
            <tag> 字幕滚动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++之虚函数</title>
      <link href="/2020/08/13/C-%E4%B9%8B%E8%99%9A%E5%87%BD%E6%95%B0/"/>
      <url>/2020/08/13/C-%E4%B9%8B%E8%99%9A%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>在一般情况下，子类继承了父类，那么子类就可以对父类的方法进行调用甚至是重写，这样子类对象就继承了父类对象。<br>但是，有一种情况，比如说，父类对象想要调用子类对象的某一个成员或者方法的时候。就不能了。<br>这个时候就需要使用虚函数(virtual )： 在父类对象声明的时候在函数的前面，显示的增加关键词virtual，这样，子类可以对其重写。<br>并且，当一个父类对象的指针对象指向子类的时候，这个时候根据情况，调用的是子类的对象方法。而不是父类自己的，这样就实现了多态，以及父类可以调用子类方法了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class A</span><br><span class="line">&#123;</span><br><span class="line">    public :</span><br><span class="line">        virtual void foo()</span><br><span class="line">        &#123;cout&lt;&lt; &quot;A foo() is called&quot;&lt;&lt;endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">class B: public A</span><br><span class="line">&#123;</span><br><span class="line">    public:</span><br><span class="line">        void foo()</span><br><span class="line">        &#123;cout&lt;&lt;&quot;B foo() is called&quot;&lt;&lt;endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">int mian()</span><br><span class="line">&#123;</span><br><span class="line">    A *a &#x3D; new B();</span><br><span class="line">    a-&gt;foo();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里面的 A *a = new B(); 就是一个父类对象指向了子类。如： A是树，B是苹果树， A既然指向了苹果树，肯定也指向了树。所以A兼容了树和苹果树的多重特性</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 虚函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT5.9学习</title>
      <link href="/2020/08/12/QT5-9%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/08/12/QT5-9%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>QT Widgets Application:  应用程序<br>Qt Console Application:  终端程序<br>Qt Quick Application： 移动端</p><p>QMainWindow 是主窗口类，主窗口具有主菜单栏、工具栏和状态栏，类似于一般的应用程序的主窗口；<br>QWidget 是所有具有可视界面类的基类，选择 QWidget 创建的界面对各种界面组件都可以 支持； (也就是说任何窗口的gui都通用，上面的那个一般用作程序的主窗口)<br>QDialog 是对话框类，可建立一个基于对话框的界面</p><p>QLabel 的继承关系是: QObject→QWidget→QFrame→QLabel</p><p>对一个控件更改其objectName后，原来写的信号与槽那个就不能使用了，需要新写.</p><p>信号与槽：<br>信号signal：特定时候特定情况下被发射的事件<br>槽 slot: 信号响应函数<br>1.一个信号可以连接多个槽<br>2.多个信号可以连接同一个槽<br>3.一个信号可以连接另外一个信号</p><p>4.信号与槽的参数应该一致<br>5.当一个信号被发射时，与其相关联的槽函数通常被立即执行。只有当槽函数执行完毕后，才会执行信号后面的代码</p><p>画图：<br>QPen类： 定义了一个QPainter应该如何画线和图形的轮廓<br>一个QPen的属性有五种： 线的格式， 线的宽度， 线的颜色，线的端点样式，以及线与线之间的链接方式.</p><p>关于绘制文本：<br>参考链接：<a href="https://blog.csdn.net/naibozhuan3744/article/details/79068528" target="_blank" rel="noopener">https://blog.csdn.net/naibozhuan3744/article/details/79068528</a>   (这里面没有讲drawText()这个函数里面的参数意义)</p><p>QT中的坐标：<br>左上角是(0,0) 对一个label来说，中的x,y是其左上角的那个点的位置坐标。</p><p>QT中截取，代替字符串： mid, replace 参考： <a href="https://blog.csdn.net/can3981132/article/details/94176849" target="_blank" rel="noopener">https://blog.csdn.net/can3981132/article/details/94176849</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> QT5.9 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多旋翼飞行器设计与控制学习—_1-基本概念</title>
      <link href="/2020/07/24/%E5%A4%9A%E6%97%8B%E7%BF%BC%E9%A3%9E%E8%A1%8C%E5%99%A8%E8%AE%BE%E8%AE%A1%E4%B8%8E%E6%8E%A7%E5%88%B6%E5%AD%A6%E4%B9%A0%E2%80%94-1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
      <url>/2020/07/24/%E5%A4%9A%E6%97%8B%E7%BF%BC%E9%A3%9E%E8%A1%8C%E5%99%A8%E8%AE%BE%E8%AE%A1%E4%B8%8E%E6%8E%A7%E5%88%B6%E5%AD%A6%E4%B9%A0%E2%80%94-1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="飞行器种类"><a href="#飞行器种类" class="headerlink" title="飞行器种类"></a>飞行器种类</h1><h2 id="固定翼"><a href="#固定翼" class="headerlink" title="固定翼"></a>固定翼</h2><p>飞机的机翼位置 后掠角等参数固定不变的飞机。由动力装置产生前进的推力或者拉力，这些力产生飞行器前进的速度。由速度诱导出托举起飞行器的升力.<br>固定翼飞机飞行需要一定的速度，不能垂直起降</p><p>民航飞机以及大部分战斗机都属于固定翼<br>优点： 续航时间最长、飞行效率最高、载荷最大<br>缺点：起飞必须要助跑，降落的时候必须要滑行</p><h2 id="直升机"><a href="#直升机" class="headerlink" title="直升机"></a>直升机</h2><p>直升机动力装置带动一个或者两个主旋翼，提供托举起飞行器的升力<br>单旋翼直升机还需要尾桨来抵消主旋翼产生的反扭力矩</p><p>优点： 垂直起降<br>缺点： 相比于固定翼飞行器续航时间短，机械结构复杂，维护成本高</p><h2 id="多旋翼"><a href="#多旋翼" class="headerlink" title="多旋翼"></a>多旋翼</h2><p>可以认为是直升机的一种，属于四个或者更多旋翼的直升机。能够垂直起降。<br>最常见的是四旋翼。<br>多旋翼机械结构非常简单，只需要将电机直接连接螺旋桨。即可实现动力系统。与传统的直升机相同，都是动力装置带动旋翼，提供托举起飞行器的升力。<br>不同的是，多旋翼靠改变螺旋桨的速度，从而改变拉力。同时，多旋翼可以相互抵消反扭力矩</p><p>一般受力特点： </p><ol><li>合成拉力垂直浆盘，也就是机身平面</li><li>一般主要受拉力和重力的影响</li></ol><a id="more"></a><p>多旋翼与四旋翼的区别：<br>旋翼数量的不同，功能都是一样。 都是产生拉力、俯仰力矩、滚转力矩、偏航力矩等。<br><img src="/image/多旋翼与四旋翼.png" width="600px" height="500px"></p><p>优点： 垂直起降，机械结构简单，容易维护<br>缺点： 载重和续航时间都比较短</p><h2 id="复合飞行器"><a href="#复合飞行器" class="headerlink" title="复合飞行器"></a>复合飞行器</h2><h1 id="无人驾驶飞机与航空模型飞机的区别"><a href="#无人驾驶飞机与航空模型飞机的区别" class="headerlink" title="无人驾驶飞机与航空模型飞机的区别"></a>无人驾驶飞机与航空模型飞机的区别</h1><h2 id="无人驾驶飞机"><a href="#无人驾驶飞机" class="headerlink" title="无人驾驶飞机"></a>无人驾驶飞机</h2><p>无人驾驶飞机(Unmanned Aerial Vehicle， UAV) 简称“无人机”，是利用无线电遥控设备和自备的程序控制装置操纵的不载人飞机。 微小型无人机英文： “Drone”</p><h2 id="航空模型飞机"><a href="#航空模型飞机" class="headerlink" title="航空模型飞机"></a>航空模型飞机</h2><p>Model Aircraft 简称“航模”， 规定： 航空模型是一种重于空气，有尺寸限制的，带有或不带有发动机的，可遥控的不能载人的航空器</p><table><thead><tr><th align="center"></th><th align="center">无人机</th><th align="center">航模</th></tr></thead><tbody><tr><td align="center">操纵方式</td><td align="center">可自主驾驶(由机载电脑自动控制，或其他飞行员远程控制)</td><td align="center">需遥控操纵</td></tr><tr><td align="center">用途</td><td align="center">军事/民用特种用途</td><td align="center">接近于玩具</td></tr><tr><td align="center">组成</td><td align="center">复杂，需要地面站</td><td align="center">简单，无需地面站</td></tr></tbody></table><p>无人机系统由： 机体、动力系统、自驾仪、任务系统、通讯链路系统、地面站组成<br>航模由： 机体、动力系统、简单的自稳系统、遥控器以及接收系统组成</p><p>多旋翼飞机有两种控制方式：<br>半自主控制方式： 航模范畴<br>全自主控制方式： 无人机范畴(可以由存储在机体电脑上进行自动飞行，飞控手只需要规划任务即可)</p><h1 id="多旋翼的操控和评价"><a href="#多旋翼的操控和评价" class="headerlink" title="多旋翼的操控和评价"></a>多旋翼的操控和评价</h1><h2 id="四旋翼的操控"><a href="#四旋翼的操控" class="headerlink" title="四旋翼的操控"></a>四旋翼的操控</h2><p>四旋翼一般有两种模式：<br><img src="/image/四旋翼两种模式.jpg" width="50%" height="50%"></p><p><br>这两者原理相似，当时操作方式不一样，X模式始终有两组电机参与速度调整，十字模式一般就是一组参与.<br></br></p><h3 id="X模式悬停"><a href="#X模式悬停" class="headerlink" title="X模式悬停"></a>X模式悬停</h3><img src="/image/悬停.png" width="600px" height="500px"><br>1，3 螺旋桨逆时针旋转。2，4 螺旋桨顺时针旋转由牛顿第三定律： 任何一个力都会产生一个与之相反的作用力。 故1，3逆时针旋转会产生顺时针的扭力。 2，4顺时针旋转会产生逆时针的力。若这四个螺旋桨的转速相同。那么就会相互抵消。同时增大转速，飞机的升力增加。同时减少，升力减少。<h3 id="X模式升降"><a href="#X模式升降" class="headerlink" title="X模式升降"></a>X模式升降</h3><p>同时增加四个螺旋桨转速，力矩之和依然为0，但是升力！=重力 上升 或者下降</p><img src="/image/升降运动.png" width="600px" height="500px"><h3 id="X模式前后-俯仰"><a href="#X模式前后-俯仰" class="headerlink" title="X模式前后/俯仰"></a>X模式前后/俯仰</h3><img src="/image/前后运动.png" width="600px" height="500px"><br></br>提高2，3相同转速. 减少1，4转速。形成向上的升力，机身尾部会上翘，同时，会产生水平向前的分力。这样机身俯仰了，还会向前运动<p><font color=red>但是这里作者说的是，1,4减小的量和2,3增加的量应该一样，但是这里，我认为不是这样<br>注意：这里机身会先做俯仰运动，然后前后飞行，也就是说这两者是一体的</font></p><h3 id="X模式左右-翻滚"><a href="#X模式左右-翻滚" class="headerlink" title="X模式左右/翻滚"></a>X模式左右/翻滚</h3><img src="/image/左右运动.png" width="600px" height="500px"><br></br><font color=red>这里也是同理 为什么增加的量要和减小的量一样?</font>提高3，4相同转速. 减少1，2转速。机身左部会上翘，同时，会产生水平向右的分力。这样机身翻滚了，还会向右运动<font color=red>注意：这里机身会先做翻滚运动，然后左右飞行，也就是说这两者是一体的</font><h3 id="X模式偏航运动"><a href="#X模式偏航运动" class="headerlink" title="X模式偏航运动"></a>X模式偏航运动</h3><img src="/image/偏航运动.png" width="600px" height="500px"><br></br>因为机身旋转会带来反扭力矩，1，3在同一条杆上，做逆时针运动，这样会产生顺时针的反扭力矩。如果不考虑2，4的影响。那么飞机会进行逆时针的旋转。为了平衡这两个货带来的影响。所以2,4的旋转方向与其相反，这样会产生逆时针的反扭力矩。当这四个的旋转速度一样的时候，就平衡了，机身不会顺时针或者逆时针偏转。现在为了让机身做偏航运动，就要让这两对力的大小不一样。如果要让机身做顺时针运动，那么就要增大1，3的转速。但是，这里PPT说的是还要减小2，4的转速。且2，4的减小量与1，3的增加量一样。<font color =red>这里没有搞懂 跟上面一样 为什么要让他们的变化量一样</font><h3 id="十字模式悬停"><a href="#十字模式悬停" class="headerlink" title="十字模式悬停"></a>十字模式悬停</h3><p>与上面X模式一样</p><h3 id="十字模式升降"><a href="#十字模式升降" class="headerlink" title="十字模式升降"></a>十字模式升降</h3><p>与上面X模式一样</p><h3 id="十字模式前后-俯仰"><a href="#十字模式前后-俯仰" class="headerlink" title="十字模式前后/俯仰"></a>十字模式前后/俯仰</h3><img src="/image/十字模式前后运动.png" width="600px" height="500px"><br>这里与上面的X模式有所不同，这里只需要一组电机进行改变就是了，比如保持2，4转速不变。增大3，减小1，那么飞机会做俯仰运动，同时会向后飞行</br><font color=red>注意：这里增大的量必须要与减小的量相同才行，因为要保持这两组扭力矩之和为0不让它做偏航运动</font><h3 id="十字模式左右-翻滚"><a href="#十字模式左右-翻滚" class="headerlink" title="十字模式左右/翻滚"></a>十字模式左右/翻滚</h3><img src="/image/十字模式左右运动.png" width="600px" height="500px"><br>这里与上面的十字模式左右一样，这里只需要一组电机进行改变就是了，比如保持1，3转速不变。增大4，减小2，那么飞机会做俯仰运动，同时会向后飞行</br><font color=red>注意： 这里增大的量必须要与减小的量相同才行，因为要保持这两组扭力矩之和为0不让它做偏航运动</font><h3 id="十字模式偏航"><a href="#十字模式偏航" class="headerlink" title="十字模式偏航"></a>十字模式偏航</h3><img src="/image/十字模式偏航运动.png" width="600px" height="500px"><br>这里需要使用到两组电机，增大1，3转速，降低2，4转速，转向与电机1、电机3的转向相反。</br><font color=red>这里不知道这两个的变化量需要一样吗</font><p><font color=green>四旋翼不能再没有滚转或者俯仰的前提下，向左向右，向前向后移动</font></p><p>注意：对于多旋翼来说，一般来说，桨叶尺寸越大，越难改变角速度，也就是加速度越小<br>在大载重下，浆叶上下挥舞会导致刚性大的浆很容易折断。</p><h1 id="PID控制理论"><a href="#PID控制理论" class="headerlink" title="PID控制理论"></a>PID控制理论</h1><p>以上都是理想状态下，实际状态下可能由于电机的不平衡等各种因素，拿悬停举例。很可能起飞之后会侧翻。解决办法是使用遥控器进行实时控制，这样就会形成循环：观察-&gt;大脑计算-&gt;控制-&gt;观察-&gt;大脑计算-&gt;控制。</p><img src="/image/PID控制流程.png" ><p>而由于人眼不能长时间观察，精确控制四个电机。我们需要一个自动反馈系统替代人操作来完成飞机的自稳定，我们人只需要控制飞机的方向和高度就可以了。这个系统中反馈由姿态传感器替代眼睛，而大脑则由单片机来替代。这时候该PID控制系统出场。</p><img src="/image/PID控制流程2.jpg" ><p>其中： 其中r(t)表示给定输入值，c(t)表示实际输出值，e(t)表示信号偏差量，u(t)表示修正量。</p><p>PID控制是最常见，应用最为广泛的自动反馈系统。PID控制器由偏差的比例（P，Proportional）、积分（I，Integral）和微分（D，Derivative）来对被控对象进行控制<br>。这里的积分或微分，都是偏差对时间的积分或微分。</p><p>参考链接：</p><ol><li><a href="https://zhuanlan.zhihu.com/p/61745437" target="_blank" rel="noopener">十字模式与X模式的不一样</a></li><li><a href="http://mhmooc.xueyinedu.com/open/course/739" target="_blank" rel="noopener">闽智学堂</a></li><li><a href="https://www.bilibili.com/video/av967732793/" target="_blank" rel="noopener">四轴飞行器前后，左右，翻滚，偏航运动原理</a></li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 多旋翼飞行器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>航空知识以及相关术语</title>
      <link href="/2020/07/21/%E8%88%AA%E7%A9%BA%E7%9F%A5%E8%AF%86%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%9C%AF%E8%AF%AD/"/>
      <url>/2020/07/21/%E8%88%AA%E7%A9%BA%E7%9F%A5%E8%AF%86%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<p>odometry: 里程表/里程计<br>我们希望测量一个运动物体的轨迹，可以通过不同的手段来实现。 比如，我们可以在汽车轮胎上安装计数码盘就可以得到轮胎移动的距离，从而得到汽车的估计。或者，也可以测量汽车的速度，加速度等来得到汽车的运动。<font color=red>完成这种运动估计得装置(包括硬件和算法)就叫做历程表/里程计</font><br>参考链接：<a href="https://blog.csdn.net/weixin_37251044/article/details/79009385" target="_blank" rel="noopener">https://blog.csdn.net/weixin_37251044/article/details/79009385</a></p><p>rotor： 旋翼<br>如： 4 rotor  6rotor</p><p>四旋翼： quadcopter<br>六旋翼： hexacopter<br>八旋翼： octocopter<br>ultrasound: 超声传感器</p><p>pressure  sensor: 压力传感器  用于测量海拔</p><p>IMU-  : 加速度计 用来控制角速度</p>]]></content>
      
      
      
        <tags>
            
            <tag> 航空术语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mavros学习</title>
      <link href="/2020/07/21/Mavros%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/07/21/Mavros%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PX4-Gazebo-Ros中的launch文件编写</title>
      <link href="/2020/07/20/PX4-Gazebo-Ros%E4%B8%AD%E7%9A%84launch%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99/"/>
      <url>/2020/07/20/PX4-Gazebo-Ros%E4%B8%AD%E7%9A%84launch%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<p>参考链接：</p><p>outdoor1.launch解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;launch&gt;</span><br><span class="line">    &lt;!-- MAVROS posix SITL environment launch script --&gt;</span><br><span class="line">    &lt;!-- launches MAVROS, PX4 SITL, Gazebo environment, and spawns vehicle --&gt;</span><br><span class="line">    &lt;!-- vehicle pose --&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;x&quot; default&#x3D;&quot;0&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;y&quot; default&#x3D;&quot;0&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;z&quot; default&#x3D;&quot;0&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;R&quot; default&#x3D;&quot;0&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;P&quot; default&#x3D;&quot;0&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;Y&quot; default&#x3D;&quot;0&quot;&#x2F;&gt;</span><br><span class="line">    &lt;!--以上都是无人机的位置起始位置信息--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- vehicle model and world --&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;est&quot; default&#x3D;&quot;ekf2&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;vehicle&quot; default&#x3D;&quot;iris&quot;&#x2F;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!--mavlink_sitl_gazebo的地址是&#x2F;home&#x2F;tony&#x2F;PX4_Firmware&#x2F;Tools&#x2F;sitl_gazebo--&gt;</span><br><span class="line">    &lt;!--也就是px4中存放world和models include等的地方--&gt;</span><br><span class="line">    &lt;!--这个world有人，车，加油站，固定飞机等--&gt;</span><br><span class="line">    &lt;!--然后在world里面没有发现本模型中的iris_0和摄像头iris_stereo_camera的模型--&gt;</span><br><span class="line">    &lt;!--这些都是通过model直接添加的model的路径在&#x2F;home&#x2F;.gazebo&#x2F;models--&gt;</span><br><span class="line">    &lt;!--然后奇怪的是&#x2F;models下是有iris_stereo_camera的--&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;world&quot; default&#x3D;&quot;$(find mavlink_sitl_gazebo)&#x2F;worlds&#x2F;outdoor1.world&quot;&#x2F;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!--iri摄像头模型,这个sdf类似于urdf--&gt;</span><br><span class="line">    &lt;!--而这里多此一举的在&#x2F;home&#x2F;tony&#x2F;PX4_Firmware&#x2F;Tools&#x2F;sitl_gazebo下找到的这个与上面的model &#x2F;home&#x2F;.gazebo&#x2F;models 内容是一样的 不知道这样使用的原因是什么--&gt;</span><br><span class="line">    &lt;!--因为当时很啥叉的按照教程来在这两个地方都进行了复制，这个模型是XTDrone做的--&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;sdf&quot; default&#x3D;&quot;$(find mavlink_sitl_gazebo)&#x2F;models&#x2F;iris_stereo_camera&#x2F;iris_stereo_camera.sdf&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- gazebo configs --&gt;</span><br><span class="line">    &lt;!--是否显示gazebo--&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;gui&quot; default&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;debug&quot; default&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;verbose&quot; default&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;paused&quot; default&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;respawn_gazebo&quot; default&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- MAVROS configs --&gt;</span><br><span class="line">    &lt;!--这个是怎么设置的?--&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;fcu_url&quot; default&#x3D;&quot;udp:&#x2F;&#x2F;:14540@localhost:14557&quot;&#x2F;&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;respawn_mavros&quot; default&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line">    &lt;!-- PX4 configs --&gt;</span><br><span class="line">    &lt;arg name&#x3D;&quot;interactive&quot; default&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    &lt;!--前面这些都是参数的设定 并没有启动--&gt;</span><br><span class="line">    &lt;!--下面才是启动gazebo仿真环境--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- PX4 SITL and Gazebo --&gt;</span><br><span class="line">    &lt;!--这里是包含另外一个launch--&gt;</span><br><span class="line">    &lt;!--且arg name 是向这个launch传递的参数--&gt;</span><br><span class="line">    &lt;!--这里还有，经过查阅posix_sitl.launch 在一开始就设置了x y z R P Y等等这些的default然后这里使用value后会覆盖掉其原来的设置的default--&gt;</span><br><span class="line">    &lt;!--这个可以看作是传参里面的初始化一样--&gt;</span><br><span class="line">    &lt;!--也就是说下面这些arg如果不写 那么就会执行posix_sitl.launch里面默认的launch 里面的world就是最开始初始化的world是一个empty因为posix_sitl这个launch里面的world初始化就是empty.world--&gt;</span><br><span class="line">    &lt;!--以后我们直接改这个launch里面的就可以了，就不用改posix_sitl.launch--&gt;</span><br><span class="line">    &lt;!--这里突然想到在默认状态下我们可以直接： roslaunch px4 posix_sitl.launch 这个就是px4官方例程里面的示例--&gt;</span><br><span class="line">    &lt;!--然后这个vehicle 里面的iris这些模型 也是在&#x2F;px4&#x2F;tools&#x2F;sitl_gazebo&#x2F;models&#x2F;下面--&gt;</span><br><span class="line">    &lt;!--然后在posix_sitl.launch下发现对于飞机不能只一个arg就完了 还需要有sdf所以那里面也有一个sdf--&gt;</span><br><span class="line">    &lt;include file&#x3D;&quot;$(find px4)&#x2F;launch&#x2F;posix_sitl.launch&quot;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;x&quot; value&#x3D;&quot;$(arg x)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;y&quot; value&#x3D;&quot;$(arg y)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;z&quot; value&#x3D;&quot;$(arg z)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;R&quot; value&#x3D;&quot;$(arg R)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;P&quot; value&#x3D;&quot;$(arg P)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;Y&quot; value&#x3D;&quot;$(arg Y)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;est&quot; value&#x3D;&quot;$(arg est)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;world&quot; value&#x3D;&quot;$(arg world)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;vehicle&quot; value&#x3D;&quot;$(arg vehicle)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;!--posit_sitl里面写的默认sdf是vehicle.sdf这个是不带摄像头的 上面初始化的那个是有摄像头的iris--&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;sdf&quot; value&#x3D;&quot;$(arg sdf)&quot;&#x2F;&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!--启动gazebo--&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;gui&quot; value&#x3D;&quot;$(arg gui)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;debug&quot; value&#x3D;&quot;$(arg debug)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;verbose&quot; value&#x3D;&quot;$(arg verbose)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;paused&quot; value&#x3D;&quot;$(arg paused)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;respawn_gazebo&quot; value&#x3D;&quot;$(arg respawn_gazebo)&quot;&#x2F;&gt;   </span><br><span class="line">        &lt;arg name&#x3D;&quot;interactive&quot; value&#x3D;&quot;$(arg interactive)&quot;&#x2F;&gt;      </span><br><span class="line">    &lt;&#x2F;include&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- MAVROS --&gt;</span><br><span class="line">    &lt;!--这是一个命名空间 类似于C++里面的using namespace 每个命名空间下可以有自己一套命名 不同的命名空间下的命名可以一样--&gt;</span><br><span class="line">    &lt;group ns &#x3D; &quot;iris_0&quot;&gt;</span><br><span class="line">        &lt;include file&#x3D;&quot;$(find mavros)&#x2F;launch&#x2F;px4.launch&quot;&gt;</span><br><span class="line">            &lt;!-- GCS link is provided by SITL --&gt;</span><br><span class="line">            &lt;arg name&#x3D;&quot;gcs_url&quot; value&#x3D;&quot;&quot;&#x2F;&gt;</span><br><span class="line">            &lt;arg name&#x3D;&quot;fcu_url&quot; value&#x3D;&quot;$(arg fcu_url)&quot;&#x2F;&gt;</span><br><span class="line">            &lt;arg name&#x3D;&quot;respawn_mavros&quot; value&#x3D;&quot;$(arg respawn_mavros)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;include&gt;</span><br><span class="line">    &lt;&#x2F;group&gt;</span><br><span class="line">&lt;&#x2F;launch&gt;</span><br></pre></td></tr></table></figure><p>大概意思：<br>官方的是: roslaunch px4 posix_sitl.launch 这个里面包含了： include gazebo_ros/empty.launch 和 node pkg = gazebo_ros 而empty.launch里面包含了 node, pkg: gazebo_ros, gazebo_gui 这些 这样就可以启动px4 和gazebo </p><p>然后光有这两个还不行，还需要启动mavros, 这是mavlink的高级封装，通过这个，可以在ros上面以及支持mavlink通信协议的飞控板也就是px4上面进行通信.</p><p>所以roslaunch px4 posix_sitl.launch里面还包含了include mavros/px4.launch<br>而mavros/px4.launch 里面include mavros/node.launch node.launch里面，有node:mavros_node pkg:mavros 这样就把mavros也给启动了</p><p>现在的问题是通过对比，发现 outdoor1.launch与 mavros_posix_sitl.launch 这两个文件的内容几乎一模一样，除了这里：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;group ns &#x3D; &quot;iris_0&quot;&gt;</span><br><span class="line">    &lt;include file&#x3D;&quot;$(find mavros)&#x2F;launch&#x2F;px4.launch&quot;&gt;</span><br><span class="line">        &lt;!-- GCS link is provided by SITL --&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;gcs_url&quot; value&#x3D;&quot;&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;fcu_url&quot; value&#x3D;&quot;$(arg fcu_url)&quot;&#x2F;&gt;</span><br><span class="line">        &lt;arg name&#x3D;&quot;respawn_mavros&quot; value&#x3D;&quot;$(arg respawn_mavros)&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;include&gt;</span><br><span class="line">&lt;&#x2F;group&gt;</span><br></pre></td></tr></table></figure><p>这里outdoor1 比原来的多了一个<group ns=""><br>通过：rospack list:<br>发现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">    &#x2F;clock</span><br><span class="line">&#x2F;diagnostics</span><br><span class="line">&#x2F;gazebo&#x2F;link_states</span><br><span class="line">&#x2F;gazebo&#x2F;model_states</span><br><span class="line">&#x2F;gazebo&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;gazebo&#x2F;parameter_updates</span><br><span class="line">&#x2F;gazebo&#x2F;set_link_state</span><br><span class="line">&#x2F;gazebo&#x2F;set_model_state</span><br><span class="line">&#x2F;gazebo_gui&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;gazebo_gui&#x2F;parameter_updates</span><br><span class="line">&#x2F;iris_0&#x2F;imu_gazebo</span><br><span class="line">&#x2F;iris_0&#x2F;mavlink&#x2F;from</span><br><span class="line">&#x2F;iris_0&#x2F;mavlink&#x2F;to</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;actuator_control</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;adsb&#x2F;send</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;adsb&#x2F;vehicle</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;altitude</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;battery</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;cam_imu_sync&#x2F;cam_imu_stamp</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;companion_process&#x2F;status</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;debug_value&#x2F;debug</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;debug_value&#x2F;debug_vector</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;debug_value&#x2F;named_value_float</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;debug_value&#x2F;named_value_int</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;debug_value&#x2F;send</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;estimator_status</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;extended_state</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;fake_gps&#x2F;mocap&#x2F;tf</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;compass_hdg</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;global</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;gp_lp_offset</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;gp_origin</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;home</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;local</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;raw&#x2F;fix</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;raw&#x2F;gps_vel</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;raw&#x2F;satellites</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;rel_alt</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;global_position&#x2F;set_gp_origin</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;gps_rtk&#x2F;send_rtcm</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;hil&#x2F;actuator_controls</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;hil&#x2F;controls</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;hil&#x2F;gps</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;hil&#x2F;imu_ned</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;hil&#x2F;optical_flow</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;hil&#x2F;rc_inputs</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;hil&#x2F;state</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;home_position&#x2F;home</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;home_position&#x2F;set</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;imu&#x2F;data</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;imu&#x2F;data_raw</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;imu&#x2F;diff_pressure</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;imu&#x2F;mag</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;imu&#x2F;static_pressure</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;imu&#x2F;temperature_baro</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;imu&#x2F;temperature_imu</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;landing_target&#x2F;lt_marker</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;landing_target&#x2F;pose</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;landing_target&#x2F;pose_in</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;local_position&#x2F;accel</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;local_position&#x2F;odom</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;local_position&#x2F;pose</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;local_position&#x2F;pose_cov</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;local_position&#x2F;velocity_body</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;local_position&#x2F;velocity_body_cov</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;local_position&#x2F;velocity_local</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;log_transfer&#x2F;raw&#x2F;log_data</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;log_transfer&#x2F;raw&#x2F;log_entry</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;manual_control&#x2F;control</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;manual_control&#x2F;send</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;mission&#x2F;reached</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;mission&#x2F;waypoints</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;mocap&#x2F;pose</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;mount_control&#x2F;command</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;mount_control&#x2F;orientation</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;obstacle&#x2F;send</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;odometry&#x2F;in</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;odometry&#x2F;out</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;onboard_computer&#x2F;status</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;param&#x2F;param_value</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;px4flow&#x2F;ground_distance</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;px4flow&#x2F;raw&#x2F;optical_flow_rad</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;px4flow&#x2F;raw&#x2F;send</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;px4flow&#x2F;temperature</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;radio_status</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;rc&#x2F;in</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;rc&#x2F;out</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;rc&#x2F;override</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_accel&#x2F;accel</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_attitude&#x2F;cmd_vel</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_attitude&#x2F;thrust</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_position&#x2F;global</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_position&#x2F;global_to_local</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_position&#x2F;local</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_raw&#x2F;attitude</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_raw&#x2F;global</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_raw&#x2F;local</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_raw&#x2F;target_attitude</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_raw&#x2F;target_global</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_raw&#x2F;target_local</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_trajectory&#x2F;desired</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_trajectory&#x2F;local</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_velocity&#x2F;cmd_vel</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;setpoint_velocity&#x2F;cmd_vel_unstamped</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;state</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;statustext&#x2F;recv</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;statustext&#x2F;send</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;target_actuator_control</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;time_reference</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;timesync_status</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;trajectory&#x2F;desired</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;trajectory&#x2F;generated</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;trajectory&#x2F;path</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;vfr_hud</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;vision_pose&#x2F;pose</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;vision_pose&#x2F;pose_cov</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;vision_speed&#x2F;speed_twist_cov</span><br><span class="line">&#x2F;iris_0&#x2F;mavros&#x2F;wind_estimation</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;camera_info</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;image_raw</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;parameter_updates</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;camera_info</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;image_raw</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;parameter_updates</span><br><span class="line">&#x2F;rosout</span><br><span class="line">&#x2F;rosout_agg</span><br><span class="line">&#x2F;tf</span><br><span class="line">&#x2F;tf_static</span><br></pre></td></tr></table></figure><pre><code>去掉这一个我们试一试</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"> &#x2F;clock</span><br><span class="line">&#x2F;diagnostics</span><br><span class="line">&#x2F;gazebo&#x2F;link_states</span><br><span class="line">&#x2F;gazebo&#x2F;model_states</span><br><span class="line">&#x2F;gazebo&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;gazebo&#x2F;parameter_updates</span><br><span class="line">&#x2F;gazebo&#x2F;set_link_state</span><br><span class="line">&#x2F;gazebo&#x2F;set_model_state</span><br><span class="line">&#x2F;gazebo_gui&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;gazebo_gui&#x2F;parameter_updates</span><br><span class="line">&#x2F;iris_0&#x2F;imu_gazebo</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;camera_info</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;image_raw</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;parameter_updates</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;camera_info</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;image_raw</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;parameter_updates</span><br><span class="line">&#x2F;mavlink&#x2F;from</span><br><span class="line">&#x2F;mavlink&#x2F;to</span><br><span class="line">&#x2F;mavros&#x2F;actuator_control</span><br><span class="line">&#x2F;mavros&#x2F;adsb&#x2F;send</span><br><span class="line">&#x2F;mavros&#x2F;adsb&#x2F;vehicle</span><br><span class="line">&#x2F;mavros&#x2F;altitude</span><br><span class="line">&#x2F;mavros&#x2F;battery</span><br><span class="line">&#x2F;mavros&#x2F;cam_imu_sync&#x2F;cam_imu_stamp</span><br><span class="line">&#x2F;mavros&#x2F;companion_process&#x2F;status</span><br><span class="line">&#x2F;mavros&#x2F;debug_value&#x2F;debug</span><br><span class="line">&#x2F;mavros&#x2F;debug_value&#x2F;debug_vector</span><br><span class="line">&#x2F;mavros&#x2F;debug_value&#x2F;named_value_float</span><br><span class="line">&#x2F;mavros&#x2F;debug_value&#x2F;named_value_int</span><br><span class="line">&#x2F;mavros&#x2F;debug_value&#x2F;send</span><br><span class="line">&#x2F;mavros&#x2F;estimator_status</span><br><span class="line">&#x2F;mavros&#x2F;extended_state</span><br><span class="line">&#x2F;mavros&#x2F;fake_gps&#x2F;mocap&#x2F;tf</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;compass_hdg</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;global</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;gp_lp_offset</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;gp_origin</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;home</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;local</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;raw&#x2F;fix</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;raw&#x2F;gps_vel</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;raw&#x2F;satellites</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;rel_alt</span><br><span class="line">&#x2F;mavros&#x2F;global_position&#x2F;set_gp_origin</span><br><span class="line">&#x2F;mavros&#x2F;gps_rtk&#x2F;send_rtcm</span><br><span class="line">&#x2F;mavros&#x2F;hil&#x2F;actuator_controls</span><br><span class="line">&#x2F;mavros&#x2F;hil&#x2F;controls</span><br><span class="line">&#x2F;mavros&#x2F;hil&#x2F;gps</span><br><span class="line">&#x2F;mavros&#x2F;hil&#x2F;imu_ned</span><br><span class="line">&#x2F;mavros&#x2F;hil&#x2F;optical_flow</span><br><span class="line">&#x2F;mavros&#x2F;hil&#x2F;rc_inputs</span><br><span class="line">&#x2F;mavros&#x2F;hil&#x2F;state</span><br><span class="line">&#x2F;mavros&#x2F;home_position&#x2F;home</span><br><span class="line">&#x2F;mavros&#x2F;home_position&#x2F;set</span><br><span class="line">&#x2F;mavros&#x2F;imu&#x2F;data</span><br><span class="line">&#x2F;mavros&#x2F;imu&#x2F;data_raw</span><br><span class="line">&#x2F;mavros&#x2F;imu&#x2F;diff_pressure</span><br><span class="line">&#x2F;mavros&#x2F;imu&#x2F;mag</span><br><span class="line">&#x2F;mavros&#x2F;imu&#x2F;static_pressure</span><br><span class="line">&#x2F;mavros&#x2F;imu&#x2F;temperature_baro</span><br><span class="line">&#x2F;mavros&#x2F;imu&#x2F;temperature_imu</span><br><span class="line">&#x2F;mavros&#x2F;landing_target&#x2F;lt_marker</span><br><span class="line">&#x2F;mavros&#x2F;landing_target&#x2F;pose</span><br><span class="line">&#x2F;mavros&#x2F;landing_target&#x2F;pose_in</span><br><span class="line">&#x2F;mavros&#x2F;local_position&#x2F;accel</span><br><span class="line">&#x2F;mavros&#x2F;local_position&#x2F;odom</span><br><span class="line">&#x2F;mavros&#x2F;local_position&#x2F;pose</span><br><span class="line">&#x2F;mavros&#x2F;local_position&#x2F;pose_cov</span><br><span class="line">&#x2F;mavros&#x2F;local_position&#x2F;velocity_body</span><br><span class="line">&#x2F;mavros&#x2F;local_position&#x2F;velocity_body_cov</span><br><span class="line">&#x2F;mavros&#x2F;local_position&#x2F;velocity_local</span><br><span class="line">&#x2F;mavros&#x2F;log_transfer&#x2F;raw&#x2F;log_data</span><br><span class="line">&#x2F;mavros&#x2F;log_transfer&#x2F;raw&#x2F;log_entry</span><br><span class="line">&#x2F;mavros&#x2F;manual_control&#x2F;control</span><br><span class="line">&#x2F;mavros&#x2F;manual_control&#x2F;send</span><br><span class="line">&#x2F;mavros&#x2F;mission&#x2F;reached</span><br><span class="line">&#x2F;mavros&#x2F;mission&#x2F;waypoints</span><br><span class="line">&#x2F;mavros&#x2F;mocap&#x2F;pose</span><br><span class="line">&#x2F;mavros&#x2F;mount_control&#x2F;command</span><br><span class="line">&#x2F;mavros&#x2F;mount_control&#x2F;orientation</span><br><span class="line">&#x2F;mavros&#x2F;obstacle&#x2F;send</span><br><span class="line">&#x2F;mavros&#x2F;odometry&#x2F;in</span><br><span class="line">&#x2F;mavros&#x2F;odometry&#x2F;out</span><br><span class="line">&#x2F;mavros&#x2F;onboard_computer&#x2F;status</span><br><span class="line">&#x2F;mavros&#x2F;param&#x2F;param_value</span><br><span class="line">&#x2F;mavros&#x2F;px4flow&#x2F;ground_distance</span><br><span class="line">&#x2F;mavros&#x2F;px4flow&#x2F;raw&#x2F;optical_flow_rad</span><br><span class="line">&#x2F;mavros&#x2F;px4flow&#x2F;raw&#x2F;send</span><br><span class="line">&#x2F;mavros&#x2F;px4flow&#x2F;temperature</span><br><span class="line">&#x2F;mavros&#x2F;radio_status</span><br><span class="line">&#x2F;mavros&#x2F;rc&#x2F;in</span><br><span class="line">&#x2F;mavros&#x2F;rc&#x2F;out</span><br><span class="line">&#x2F;mavros&#x2F;rc&#x2F;override</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_accel&#x2F;accel</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_attitude&#x2F;cmd_vel</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_attitude&#x2F;thrust</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_position&#x2F;global</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_position&#x2F;global_to_local</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_position&#x2F;local</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_raw&#x2F;attitude</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_raw&#x2F;global</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_raw&#x2F;local</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_raw&#x2F;target_attitude</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_raw&#x2F;target_global</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_raw&#x2F;target_local</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_trajectory&#x2F;desired</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_trajectory&#x2F;local</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_velocity&#x2F;cmd_vel</span><br><span class="line">&#x2F;mavros&#x2F;setpoint_velocity&#x2F;cmd_vel_unstamped</span><br><span class="line">&#x2F;mavros&#x2F;state</span><br><span class="line">&#x2F;mavros&#x2F;statustext&#x2F;recv</span><br><span class="line">&#x2F;mavros&#x2F;statustext&#x2F;send</span><br><span class="line">&#x2F;mavros&#x2F;target_actuator_control</span><br><span class="line">&#x2F;mavros&#x2F;time_reference</span><br><span class="line">&#x2F;mavros&#x2F;timesync_status</span><br><span class="line">&#x2F;mavros&#x2F;trajectory&#x2F;desired</span><br><span class="line">&#x2F;mavros&#x2F;trajectory&#x2F;generated</span><br><span class="line">&#x2F;mavros&#x2F;trajectory&#x2F;path</span><br><span class="line">&#x2F;mavros&#x2F;vfr_hud</span><br><span class="line">&#x2F;mavros&#x2F;vision_pose&#x2F;pose</span><br><span class="line">&#x2F;mavros&#x2F;vision_pose&#x2F;pose_cov</span><br><span class="line">&#x2F;mavros&#x2F;vision_speed&#x2F;speed_twist_cov</span><br><span class="line">&#x2F;mavros&#x2F;wind_estimation</span><br><span class="line">&#x2F;rosout</span><br><span class="line">&#x2F;rosout_agg</span><br><span class="line">&#x2F;tf</span><br><span class="line">&#x2F;tf_static</span><br></pre></td></tr></table></figure><p>发现跟mavros有关的，前面都会多一个/iris_0原来这个group的效果在这里<br>还发现去掉这个group后，这几个没有去掉，依然前面有:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;iris_0&#x2F;imu_gazebo</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;camera_info</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;image_raw</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;left&#x2F;parameter_updates</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;camera_info</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;image_raw</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;parameter_descriptions</span><br><span class="line">&#x2F;iris_0&#x2F;stereo_camera&#x2F;right&#x2F;parameter_updates</span><br></pre></td></tr></table></figure><p><font color=red>目前不知道这个是什么原因造成的</font></p><p>关于mavros的，可以参考这篇文章：<a href="/2020/07/21/Mavros%E5%AD%A6%E4%B9%A0/" title="Mavros学习">Mavros学习</a></p><ol><li><a href="https://blog.csdn.net/brawly/article/details/106435104#212_linkgazebo_85" target="_blank" rel="noopener">https://blog.csdn.net/brawly/article/details/106435104#212_linkgazebo_85</a></li><li><a href="https://www.jianshu.com/p/63a959bfbb96" target="_blank" rel="noopener">https://www.jianshu.com/p/63a959bfbb96</a></li><li><a href="https://blog.csdn.net/qq_33444963/article/details/77893881#t6" target="_blank" rel="noopener">https://blog.csdn.net/qq_33444963/article/details/77893881#t6</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>URDF格式的升级版SDF</title>
      <link href="/2020/07/20/URDF%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%8D%87%E7%BA%A7%E7%89%88SDF/"/>
      <url>/2020/07/20/URDF%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%8D%87%E7%BA%A7%E7%89%88SDF/</url>
      
        <content type="html"><![CDATA[<p>在前面的教程:URDF文件的编写中，我们知道一般机器人描述文件是URDF，通过写URDF文件来描述一个机器人，现在，这里有更高级的了。SDF。 SDF和URDF多是基于XML格式的机器人描述，区别在于：</p><blockquote><p>URDF只能描述单个机器人的运动和动态属性,而无法描述环境信息<br>SDF格式是可以同时描述机器人和环境</p></blockquote><p>查看代码，发现，以sdf为格式的xml文件一般写在.world或者.sdf文件下。<br>比如：本项目中的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;arg name&#x3D;&quot;world&quot; default&#x3D;&quot;$(find mavlink_sitl_gazebo)&#x2F;worlds&#x2F;outdoor1.world&quot;&#x2F;&gt;</span><br><span class="line">    </span><br><span class="line">&lt;arg name&#x3D;&quot;sdf&quot; default&#x3D;&quot;$(find mavlink_sitl_gazebo)&#x2F;models&#x2F;iris_stereo_camera&#x2F;iris_stereo_camera.sdf&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>这两个都是写在outdoor1.launch文件里面<br>接着看outdoor1.launch：</p><p>参考链接：<br>1.<a href="https://zhuanlan.zhihu.com/p/67470858" target="_blank" rel="noopener">SDF机器人描述格式解析</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> URDF </tag>
            
            <tag> SDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu外接音箱时没有声音</title>
      <link href="/2020/07/17/ubuntu%E5%A4%96%E6%8E%A5%E9%9F%B3%E7%AE%B1%E6%97%B6%E6%B2%A1%E6%9C%89%E5%A3%B0%E9%9F%B3/"/>
      <url>/2020/07/17/ubuntu%E5%A4%96%E6%8E%A5%E9%9F%B3%E7%AE%B1%E6%97%B6%E6%B2%A1%E6%9C%89%E5%A3%B0%E9%9F%B3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux-ubuntu16.04相关学习</title>
      <link href="/2020/07/17/linux-ubuntu16-04%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/07/17/linux-ubuntu16-04%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>1.打开终端<br><code>ctrl+alt+T</code><br>终端下开多个窗口<br><code>ctrl+shift+T</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>URDF文件的编写</title>
      <link href="/2020/07/16/URDF%E6%96%87%E4%BB%B6%E7%9A%84%E7%BC%96%E5%86%99/"/>
      <url>/2020/07/16/URDF%E6%96%87%E4%BB%B6%E7%9A%84%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<p>在ROS机器人系统中，想要制造一个机器人，就需要编写机器人描述文件。也就是URDF(Unified Robot Description Format, 统一机器人描述格式)。其使XML文件格式来描述机器人，ROS里面提供了URDF文件的C++解释器，可以解析这种格式。</p><a id="more"></a><p>1.创建功能包<br><code>catkin_creage_pkg robot1_description</code></p><p>2.在功能包下新建urdf文件夹，新建robot1.urdf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;robot name&#x3D;&quot;robot1&quot;&gt;     </span><br><span class="line">    &lt;link name&#x3D;&quot;base_link&quot;&gt;</span><br><span class="line">           &lt;visual&gt;</span><br><span class="line">                 &lt;geometry&gt;</span><br><span class="line">                       &lt;box size&#x3D;&quot;0.2 .3 .1&quot;&#x2F;&gt;</span><br><span class="line">                 &lt;&#x2F;geometry&gt;</span><br><span class="line">            &lt;origin rpy&#x3D;&quot;0 0 0&quot; xyz&#x3D;&quot;0 0 0.05&quot;&#x2F;&gt;</span><br><span class="line">            &lt;material name&#x3D;&quot;white&quot;&gt;</span><br><span class="line">                &lt;color rgba&#x3D;&quot;1 1 1 1&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;material&gt;</span><br><span class="line">           &lt;&#x2F;visual&gt;     </span><br><span class="line">     &lt;&#x2F;link&gt;</span><br><span class="line"></span><br><span class="line">     &lt;link name&#x3D;&quot;wheel_1&quot;&gt;</span><br><span class="line">           &lt;visual&gt;</span><br><span class="line">                 &lt;geometry&gt;</span><br><span class="line">                       &lt;cylinder length&#x3D;&quot;0.05&quot; radius&#x3D;&quot;0.05&quot;&#x2F;&gt;</span><br><span class="line">                 &lt;&#x2F;geometry&gt;</span><br><span class="line">            &lt;origin rpy&#x3D;&quot;0 1.5 0&quot; xyz&#x3D;&quot;0.1 0.1 0&quot;&#x2F;&gt;</span><br><span class="line">               &lt;material name&#x3D;&quot;black&quot;&gt;</span><br><span class="line">                &lt;color rgba&#x3D;&quot;0 0 0 1&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;material&gt;</span><br><span class="line">        &lt;&#x2F;visual&gt;</span><br><span class="line">     &lt;&#x2F;link&gt;</span><br><span class="line"></span><br><span class="line">     &lt;link name&#x3D;&quot;wheel_2&quot;&gt;</span><br><span class="line">           &lt;visual&gt;</span><br><span class="line">                 &lt;geometry&gt;</span><br><span class="line">                       &lt;cylinder length&#x3D;&quot;0.05&quot; radius&#x3D;&quot;0.05&quot;&#x2F;&gt;</span><br><span class="line">                 &lt;&#x2F;geometry&gt;</span><br><span class="line">            &lt;origin rpy&#x3D;&quot;0 1.5 0&quot; xyz&#x3D;&quot;-0.1 0.1 0&quot;&#x2F;&gt;</span><br><span class="line">               &lt;material name&#x3D;&quot;black&quot;&#x2F;&gt;</span><br><span class="line">           &lt;&#x2F;visual&gt;</span><br><span class="line">     &lt;&#x2F;link&gt;</span><br><span class="line"></span><br><span class="line">     &lt;link name&#x3D;&quot;wheel_3&quot;&gt;</span><br><span class="line">           &lt;visual&gt;</span><br><span class="line">                 &lt;geometry&gt;</span><br><span class="line">                       &lt;cylinder length&#x3D;&quot;0.05&quot; radius&#x3D;&quot;0.05&quot;&#x2F;&gt;</span><br><span class="line">                 &lt;&#x2F;geometry&gt;</span><br><span class="line">            &lt;origin rpy&#x3D;&quot;0 1.5 0&quot; xyz&#x3D;&quot;0.1 -0.1 0&quot;&#x2F;&gt;</span><br><span class="line">               &lt;material name&#x3D;&quot;black&quot;&#x2F;&gt;</span><br><span class="line">           &lt;&#x2F;visual&gt;</span><br><span class="line">     &lt;&#x2F;link&gt;</span><br><span class="line"></span><br><span class="line">     &lt;link name&#x3D;&quot;wheel_4&quot;&gt;</span><br><span class="line">           &lt;visual&gt;</span><br><span class="line">                 &lt;geometry&gt;</span><br><span class="line">                       &lt;cylinder length&#x3D;&quot;0.05&quot; radius&#x3D;&quot;0.05&quot;&#x2F;&gt;</span><br><span class="line">                 &lt;&#x2F;geometry&gt;</span><br><span class="line">            &lt;origin rpy&#x3D;&quot;0 1.5 0&quot; xyz&#x3D;&quot;-0.1 -0.1 0&quot;&#x2F;&gt;</span><br><span class="line">               &lt;material name&#x3D;&quot;black&quot;&#x2F;&gt;</span><br><span class="line">           &lt;&#x2F;visual&gt;</span><br><span class="line">     &lt;&#x2F;link&gt;</span><br><span class="line"></span><br><span class="line">     &lt;joint name&#x3D;&quot;base_to_wheel1&quot; type&#x3D;&quot;fixed&quot;&gt;</span><br><span class="line">           &lt;parent link&#x3D;&quot;base_link&quot;&#x2F;&gt;</span><br><span class="line">           &lt;child link&#x3D;&quot;wheel_1&quot;&#x2F;&gt;</span><br><span class="line">           &lt;origin xyz&#x3D;&quot;0 0 0&quot;&#x2F;&gt;</span><br><span class="line">     &lt;&#x2F;joint&gt;</span><br><span class="line"></span><br><span class="line">     &lt;joint name&#x3D;&quot;base_to_wheel2&quot; type&#x3D;&quot;fixed&quot;&gt;</span><br><span class="line">           &lt;parent link&#x3D;&quot;base_link&quot;&#x2F;&gt;</span><br><span class="line">           &lt;child link&#x3D;&quot;wheel_2&quot;&#x2F;&gt;</span><br><span class="line">           &lt;origin xyz&#x3D;&quot;0 0 0&quot;&#x2F;&gt;</span><br><span class="line">     &lt;&#x2F;joint&gt;</span><br><span class="line"></span><br><span class="line">     &lt;joint name&#x3D;&quot;base_to_wheel3&quot; type&#x3D;&quot;fixed&quot;&gt;</span><br><span class="line">           &lt;parent link&#x3D;&quot;base_link&quot;&#x2F;&gt;</span><br><span class="line">           &lt;child link&#x3D;&quot;wheel_3&quot;&#x2F;&gt;</span><br><span class="line">           &lt;origin xyz&#x3D;&quot;0 0 0&quot;&#x2F;&gt;</span><br><span class="line">     &lt;&#x2F;joint&gt;</span><br><span class="line"></span><br><span class="line">     &lt;joint name&#x3D;&quot;base_to_wheel4&quot; type&#x3D;&quot;fixed&quot;&gt;</span><br><span class="line">           &lt;parent link&#x3D;&quot;base_link&quot;&#x2F;&gt;</span><br><span class="line">           &lt;child link&#x3D;&quot;wheel_4&quot;&#x2F;&gt;</span><br><span class="line">           &lt;origin xyz&#x3D;&quot;0 0 0&quot;&#x2F;&gt;</span><br><span class="line">     &lt;&#x2F;joint&gt;</span><br><span class="line">&lt;&#x2F;robot&gt;</span><br></pre></td></tr></table></figure><p>这是一个最简单的机器人，由一个底盘+四个轮子组成 (这里有5个link, 对应的就有4个joint)</p><p>3.在功能包下新建launch文件夹以及display.launch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;launch&gt;</span><br><span class="line">&lt;arg name&#x3D;&quot;model&quot; &#x2F;&gt;</span><br><span class="line">&lt;arg name&#x3D;&quot;gui&quot; default&#x3D;&quot;False&quot; &#x2F;&gt;</span><br><span class="line">&lt;param name&#x3D;&quot;robot_description&quot; textfile&#x3D;&quot;$(arg model)&quot; &#x2F;&gt;</span><br><span class="line">&lt;param name&#x3D;&quot;use_gui&quot; value&#x3D;&quot;$(arg gui)&quot;&#x2F;&gt;</span><br><span class="line">&lt;node name&#x3D;&quot;joint_state_publisher&quot; pkg&#x3D;&quot;joint_state_publisher&quot; type&#x3D;&quot;joint_state_publisher&quot; &gt;&lt;&#x2F;node&gt;</span><br><span class="line">&lt;node name&#x3D;&quot;robot_state_publisher&quot; pkg&#x3D;&quot;robot_state_publisher&quot; type&#x3D;&quot;state_publisher&quot; &#x2F;&gt;</span><br><span class="line">&lt;node name&#x3D;&quot;rviz&quot; pkg&#x3D;&quot;rviz&quot; type&#x3D;&quot;rviz&quot; args&#x3D;&quot;-d $(find urdf_tutorial)&#x2F;urdf.rviz&quot; &#x2F;&gt;      </span><br><span class="line">&lt;&#x2F;launch&gt;</span><br></pre></td></tr></table></figure><p>其中：</p><blockquote><arg name="gui" default="False" />是设置GUI参数，显示关节控制插件<param name="robot_description" textfile="$(arg model)" /> 这个好像也是必须的<node name="joint_state_publisher" pkg="joint_state_publisher" >type="joint_state_publisher" ></node>运行joint_state_publisher节点，发布机器人关节状态<node name="robot_state_publisher" >运行robot_state_publisher节点，发布TF将机器人各个link,joint之间的关系通过TF的形式整理成三维姿态信息发布出去<node name="rviz" pkg="rviz" type="rviz" args="-d $(find urdf_tutorial)/urdf.rviz" />运行rviz可视化界面</blockquote><p><font color=red>注意：这里最后这个一开始需要注释掉，因为找不到urdf_tutorial<br>更正： 查询发现，这个urdf_tutorial是一个功能包，需要额外安装。这里我们没有安装，使用:rospack list 查询发现：没有这个东西<br>安装方式： sudo apt-get install ros-kinetic-urdf-tutorial<br>安装完成后再次查询，就可以找到这个包了，这样添加进去就不会报错了。<br>会安装到/opt/ros/kinetic/share/urdf_tutorial</p><p>在本教程中的，后面添加机械臂那里，<mesh filename="package://pr2_description/meshes/gripper_v0/1_finger.dae"/><br>这里也是，pr2_description也是一个ros包，需要额外安装,安装命令：<br>sudo apt-get install-pr2-description 这样就不会报错了<br>但是打开，终端会一直出现:<br><img src="/image/Tiffile.png" width="600px" height="500px" ></p><p>但是，出现的界面是对的：<br><img src="/image/moviet.png" width="600px" height="500px" ><br></font></p><p>4.编译<br><code>catkin_make</code></p><p>5.启动roslaunch<br><code>$ roslaunch robot1_description display.launch model:=&#39;</code>这里改成自己的路路径/urdf/robot1.urdf’<br><font color=yellow>把文件拖到终端里面就可以显示文件位置信息了</font></p><p>或者可以在launch 文件下： <code>roslaunch  display.launch model:=&#39;</code>这里改成自己的路径/urdf/robot1.urdf’ 也就是说，不加功能包的名字，也是可以进行启动的。</p><ol start="6"><li>在rviz中进行显示，启动rviz<br><code>rosrun rviz rviz</code></li></ol><p>7.打开了rviz后，里面什么都没有的<br><img src="/image/rviz1.png" alt="打开的界面就是这个样子"><br>点击左下角add,选择RobotMode</p><p><img src="/image/rviz2.png" alt="选择RobotMode"></p><p><img src="/image/rviz3.png" alt="打开rviz"></p><p><font color=red>这里发现，小车的颜色不对，这里一定要注意，这里的map一定要改成baselink才会显示出小车真正的样子与颜色！！！！不然后续在里面改了，结果没看到效果！！！</font></p><img src="/image/map.png" width="600px" height="500px" ><img src="/image/base_link.png" width="600px" height="500px" ><p>补充：<br>连接(link)标签 <a href="http://wiki.ros.org/urdf/XML/link" target="_blank" rel="noopener">官方详细说明</a></p><table><thead><tr><th align="center">标签</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">link</td><td align="center">连接的可视化、碰撞和惯性属性设置</td></tr><tr><td align="center">visual</td><td align="center">设置连接的可视化属性</td></tr><tr><td align="center">collision</td><td align="center">设置连接的碰撞计算属性</td></tr><tr><td align="center">inertial</td><td align="center">设置连接的惯性属性</td></tr><tr><td align="center">geometry</td><td align="center">输入模型的形状。参数有：box、cylinder、sphere、radius等等</td></tr><tr><td align="center">origin</td><td align="center">link相对于世界坐标系的移动和旋转</td></tr><tr><td align="center">material</td><td align="center">设置连接的颜色和纹理 如：color rgba颜色 由red/green/blue/alpha 组成，每一个数字在 [0,1] 内。</td></tr><tr><td align="center">mass</td><td align="center">连接重量(单位：kg)的设置</td></tr></tbody></table><p><img src="/image/link.png" alt="官方图片"></p><p>关节(joint)标签 <a href="http://wiki.ros.org/urdf/XML/joint" target="_blank" rel="noopener">官方教程</a></p><table><thead><tr><th align="center">标签</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">joint</td><td align="center">与连接的关系和关节类型的设置</td></tr><tr><td align="center">parent</td><td align="center">关节的父连接</td></tr><tr><td align="center">child</td><td align="center">关节的子连接</td></tr><tr><td align="center">origin</td><td align="center">将父连接坐标系转换为子连接坐标系</td></tr><tr><td align="center">axis</td><td align="center">设置旋转轴</td></tr><tr><td align="center">limit</td><td align="center">设置关节的速度、力和半径</td></tr></tbody></table><blockquote><p>注意：link 和joint里面都有origin这两者的区别？<br>1.link可以看成是一个真实的物体<br>2.joint可以看成是坐标系<br>3.一个物体在空间中，需要知道其位置，以及其坐标系<br>4.link中的origin就是在parent link中的joint坐标系，也就是parent的中心坐标系下进行的平移旋转后画出的图形<br>但是其自身坐标系不变，还是在原来的位置<br>joint的origin是说相对于parent坐标系，自己的坐标系的位置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;link name&#x3D;&quot;wheel_1&quot;&gt;</span><br><span class="line">&lt;origin rpy&#x3D;&quot;0 1.5 0&quot; xyz&#x3D;&quot;0.1 0.1 0&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">     &lt;joint name&#x3D;&quot;base_to_wheel1&quot; type&#x3D;&quot;fixed&quot;&gt;</span><br><span class="line">           &lt;parent link&#x3D;&quot;base_link&quot;&#x2F;&gt;</span><br><span class="line">           &lt;child link&#x3D;&quot;wheel_1&quot;&#x2F;&gt;</span><br><span class="line">           &lt;origin xyz&#x3D;&quot;0 0 0&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>初始状态：<br><img src="/image/link_origin_1.png" width="600px" height="500px" ></p><p>只更改：link 中的为：<origin rpy="0 1.5 0" xyz="3 0.1 0"/></p><img src="/image/link_origin_2.png" width="600px" height="500px"><p>发现link的位置变了，但是其自身坐标系没有变</p><p>再更改joint为<br><code>&lt;origin xyz=&quot;0.5 0 0 &quot;&gt;</code></p><p>link的位置还是上一步的位置，自身坐标系变了</p><img src="/image/link_origin_3.png" width="600px" height="500px"><br></br><font color=green><p>关节类型</p><blockquote><p>fixed:固定关节，不允许运动<br>continuous: 转动关节，可以绕单轴无限旋转<br>revolute: 旋转关节，类似于continuous 但是旋转角度有限<br>prismatic:滑动关节，沿某一轴线移动的关节，带有位置极限<br>floating: 浮动关节，允许进行平移、旋转运动<br>planar: 平面关节，允许在平面正交方向上平移或者旋转<br></font></p></blockquote><p>参考链接：</p><ol><li><a href="https://www.cnblogs.com/linuxAndMcu/p/10874789.html" target="_blank" rel="noopener">创建urdf文件并在rviz中擦查看模型</a></li><li><a href="http://www.voidcn.com/article/p-zetaywrr-brr.html" target="_blank" rel="noopener">关于ufdf中link与joint的origin问题</a></li><li><a href="https://zhuanlan.zhihu.com/p/94701620?utm_source=wechat_timeline" target="_blank" rel="noopener">借鉴这个坐标转换图</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> URDF </tag>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习ros-turtle-TF坐标转换与roslaunch的编写</title>
      <link href="/2020/07/15/%E5%AD%A6%E4%B9%A0ros-turtle-TF%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2%E4%B8%8Eroslaunch%E7%9A%84%E7%BC%96%E5%86%99/"/>
      <url>/2020/07/15/%E5%AD%A6%E4%B9%A0ros-turtle-TF%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2%E4%B8%8Eroslaunch%E7%9A%84%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<p>在机器人系统中，我们经常会遇到坐标变换相关的问题。比如说，在一个导航系统中，我们通过激光雷达、双目摄像头等传感器对周围环境进行感知，但是这些传感器直接采集的数据是相对于传感器而言的， 而传感器在机器人身上的安装位置又各不相同，我们关心的则是外部环境与机器人本体之间的关系，所以还需要把相对于传感器的数据变换成为相对于机器人的数据。这个过程就是所谓的坐标变换。</p><p>如果涉及到多个机器人之间的协同工作，则需要维护两两之间的相对位置关系，在机器人很多的情况下，或者说是自由度很多的情况下，这种坐标系之间的变换关系就相对比较复杂。 ROS系统提供了一个叫做tf的坐标变换库，这个库使得我们能够在各种坐标系之间自由地切换。</p><p>在ROS中有一个turtle的例子，一个通过键盘控制turtle1跑，另外一个turtle2跟在turtle1后面，跟随其坐标进行跟踪。</p><a id="more"></a><p>这是：<a href="http://wiki.ros.org/tf/Tutorials/Introduction%20to%20tf" target="_blank" rel="noopener">官方例子</a></p><p>这一过程就是通过tf来实现的。一个tf系统由tf广播者(tf broadcaster)和tf监听者(tf listener)两个部分构成的。这里的白龟(turtle1)和红龟(turtle2)就是两个tf广播者，它们不断的向外发送自己相对于世界坐标系的位置(<font color=green>也就是自己坐标系的原点在世界坐标系下的位置</font>)。这里的是<font color=red>广播</font>，所以所有的都会接收到他们发送的。<br>另外有一个监听者负责维护两个乌龟的坐标系，通过tf的API系统计算白龟(turtle1)相对红龟(turtle2)的位置，并控制红龟(turtle2)跟踪白龟(turtle1)。为了跟随，就需要知道turtle1相对于turtle2的坐标位置，也就是说turtle1的坐标原点在turtle2下的位置，也就是说turtle1在turtle2下的位置</p><p><a href="http://wiki.ros.org/tf/Tutorials/Writing%20a%20tf%20broadcaster%20%28C%2B%2B%29" target="_blank" rel="noopener">官方broadcaster例子C++版</a></p><p>创建功能包及其依赖<br><code>catkin_create_pkg learning_tf tf roscpp rospy turtlesim</code></p><p>broadcaster.cpp，我们发布的节点就是通过这个来广播自己在世界坐标系的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;这里有我们访问master的接口</span><br><span class="line">#include &lt;ros&#x2F;ros.h&gt;     </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;提供了tf广播的各种API 后面的listen就是根据这个来的</span><br><span class="line">#include &lt;tf&#x2F;transform_broadcaster.h&gt;   </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;turtlesim是一个依赖包，里面有将要订阅pose主题的消息类型</span><br><span class="line">#include &lt;turtlesim&#x2F;Pose.h&gt;</span><br><span class="line"></span><br><span class="line">std::string turtle_name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;这里的const turtlesim::PoseConstPtr&amp; msg 是一个套路，目前还不知道这个</span><br><span class="line">&#x2F;&#x2F;是啥意思？</span><br><span class="line">void poseCallback(const turtlesim::PoseConstPtr&amp; msg)&#123;</span><br><span class="line">  &#x2F;&#x2F;tf广播器，发布话题相当于定义一个发布器</span><br><span class="line">  static tf::TransformBroadcaster br;</span><br><span class="line">  </span><br><span class="line">  &#x2F;**根据乌龟当前的位姿，设置相对于世界坐标系的坐标变换</span><br><span class="line">  ** 位姿就是海龟仿真器发出的，也就是&#x2F;sim 这个sim就是海龟仿真器 &lt;node pkg&#x3D;&quot;turtlesim&quot; type&#x3D;&quot;turtlesim_node&quot; name&#x3D;&quot;sim&quot;&#x2F;&gt;</span><br><span class="line">  **这里启动时的名字</span><br><span class="line">  **&#x2F;</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F;定义存放转换信息(平动 转动)的变量</span><br><span class="line">  tf::Transform transform;</span><br><span class="line">  </span><br><span class="line">  &#x2F;**设置坐标原点</span><br><span class="line">  **setOrigin()函数的参数类型需要为tf::Vector3类型</span><br><span class="line">  **(msg-&gt;x, msg-&gt;y, 0.0) 为turtle的坐标原点在world世界下的坐标&#x2F;</span><br><span class="line">  transform.setOrigin( tf::Vector3(msg-&gt;x, msg-&gt;y, 0.0) );</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F;定义旋转</span><br><span class="line">  tf::Quaternion q;</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F;setRPY函数的参数为turtle在world坐标系下的roll,pitch,yaw</span><br><span class="line">  q.setRPY(0, 0, msg-&gt;theta);</span><br><span class="line">  transform.setRotation(q);</span><br><span class="line">  </span><br><span class="line">  &#x2F;**br有成员函数send**  这是 Transform自带的</span><br><span class="line">  ** 第一个参数是坐标变换内容，第二个参数是时间戳</span><br><span class="line">  ** world 和 turtle_name 表示本次坐标变换相对于世界坐标系的变换</span><br><span class="line">  **这里world就是父坐标系 turtle_name就是子坐标系</span><br><span class="line">  **同时，这里子坐标系有两个实际上 turtle1 turtle2所以这里取了个变量</span><br><span class="line">  **父坐标系只有一个，就是world</span><br><span class="line">  *&#x2F;</span><br><span class="line">  br.sendTransform(tf::StampedTransform(transform, ros::Time::now(), &quot;world&quot;, turtle_name));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char** argv)&#123;</span><br><span class="line">    &#x2F;&#x2F;初始化一个节点，名字叫做my_tf_broadcaster</span><br><span class="line">  ros::init(argc, argv, &quot;my_tf_broadcaster&quot;);</span><br><span class="line">  &#x2F;**输入参数有两个类似于这个:rosrun turtlesim turtle1  这个经过测试不行</span><br><span class="line">  **但是，rosrun turtlesim turtlsim_node 却是可以，不知道这里为什么</span><br><span class="line">  **所以，这里输入参数是2个，第二个参数就是turtle_name&#x2F;</span><br><span class="line">  if (argc !&#x3D; 2)&#123;ROS_ERROR(&quot;need turtle name as argument&quot;); return -1;&#125;;</span><br><span class="line">  turtle_name &#x3D; argv[1];</span><br><span class="line"></span><br><span class="line">  ros::NodeHandle node;</span><br><span class="line">  &#x2F;**这里turtle_name 就是：turtle1, turtle2</span><br><span class="line">  **这里&amp;poseCallback 前面可以不用加&amp;&#x2F;</span><br><span class="line">  ros::Subscriber sub &#x3D; node.subscribe(turtle_name+&quot;&#x2F;pose&quot;, 10, &amp;poseCallback);</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;循环等待</span><br><span class="line">  ros::spin();</span><br><span class="line">  return 0;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a href="http://wiki.ros.org/tf/Tutorials/Writing%20a%20tf%20listener%20%28C%2B%2B%29" target="_blank" rel="noopener">官方listener例子C++版</a></p><p>turtle_tf_listener.cpp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;ros&#x2F;ros.h&gt;</span><br><span class="line">&#x2F;&#x2F;这里跟前面的不一样，前面是tf&#x2F;transform_broadcaster.h</span><br><span class="line">#include &lt;tf&#x2F;transform_listener.h&gt;  </span><br><span class="line">#include &lt;geometry_msgs&#x2F;Twist.h&gt;   &#x2F;&#x2F;坐标变换好像要用到这个</span><br><span class="line">#include &lt;turtlesim&#x2F;Spawn.h&gt;</span><br><span class="line"></span><br><span class="line">int main(int argc, char** argv)&#123;</span><br><span class="line">  ros::init(argc, argv, &quot;my_tf_listener&quot;);</span><br><span class="line">  ros::NodeHandle node;</span><br><span class="line"></span><br><span class="line">  &#x2F;**</span><br><span class="line">  **这段就是在图中生成一个turtle,这里猜测，启动的时候已经启动了一个turtle1</span><br><span class="line">  **但是，还需要一个turtle2,所以这里生成一个</span><br><span class="line">  **但是，经过测试发现，这里的话，如果在后面设置的roslaunch 里面没有写的话</span><br><span class="line">  **那么就是只是生成一个turtle，而这个节点是没有启动的，那就更加不用说控制了</span><br><span class="line">  **同理，如果只是在roslaunch里面写了节点，这里不写的话，那么rosnode 里面会有</span><br><span class="line">  **但是，图中不会显示乌龟</span><br><span class="line">  *&#x2F;</span><br><span class="line">  ros::service::waitForService(&quot;spawn&quot;);</span><br><span class="line">  ros::ServiceClient add_turtle &#x3D;</span><br><span class="line">    node.serviceClient&lt;turtlesim::Spawn&gt;(&quot;spawn&quot;);</span><br><span class="line">  turtlesim::Spawn srv;</span><br><span class="line">  add_turtle.call(srv);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;前面是生成一个turtle2，然后我们要发布cmd_vel速度控制指令来控制</span><br><span class="line">  ros::Publisher turtle_vel &#x3D;</span><br><span class="line">    node.advertise&lt;geometry_msgs::Twist&gt;(&quot;turtle2&#x2F;cmd_vel&quot;, 10);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;在程序中具现化监听器对象。只要创建了这个对象，它就开始监听系统中的各个坐标变换，并将之缓存10秒。这里也就是存放变换关系的变量</span><br><span class="line">  tf::TransformListener listener;</span><br><span class="line"></span><br><span class="line">  ros::Rate rate(10.0);</span><br><span class="line">  while (node.ok())&#123;</span><br><span class="line">    tf::StampedTransform transform;</span><br><span class="line">    try&#123;</span><br><span class="line">       &#x2F;**通过Transform的API 查询turtle1相对于turtle2的坐标变换</span><br><span class="line">        **跟前面一样，就是turtle1的原点在turtle2下的位置 </span><br><span class="line">        **第三个参数&#39;ros::Time(0)&#39;则指获取当前时刻的坐标关系。 最后一个参数**tranform则记录了具体的变换内容，它是一个tf::StampedTransform对象。</span><br><span class="line">        **且这里tf会把监听的内容放到一个缓存中，然后再读取相关的内容。而这个过程会有几毫秒的误差.所以这里不能像先前的那样，使用 ros::Time::now()</span><br><span class="line">        *&#x2F;</span><br><span class="line">      listener.lookupTransform(&quot;&#x2F;turtle2&quot;, &quot;&#x2F;turtle1&quot;,</span><br><span class="line">                               ros::Time(0), transform);</span><br><span class="line">    &#125;</span><br><span class="line">    catch (tf::TransformException &amp;ex) &#123;</span><br><span class="line">      ROS_ERROR(&quot;%s&quot;,ex.what());</span><br><span class="line">      ros::Duration(1.0).sleep();</span><br><span class="line">      continue;</span><br><span class="line">    &#125;</span><br><span class="line">     &#x2F;**监听到这两个的坐标变换后，得到turtle2关于turtle1的坐标变换后</span><br><span class="line">      **就可以计算turtle2的速度了，并发布速度指令控制其运动</span><br><span class="line">      **下面的这个还不知道是怎么计算的</span><br><span class="line">      *&#x2F;</span><br><span class="line">    geometry_msgs::Twist vel_msg;</span><br><span class="line">    vel_msg.angular.z &#x3D; 4.0 * atan2(transform.getOrigin().y(),</span><br><span class="line">                                    transform.getOrigin().x());</span><br><span class="line">    vel_msg.linear.x &#x3D; 0.5 * sqrt(pow(transform.getOrigin().x(), 2) +</span><br><span class="line">                                  pow(transform.getOrigin().y(), 2));</span><br><span class="line">    turtle_vel.publish(vel_msg);</span><br><span class="line"></span><br><span class="line">    rate.sleep();</span><br><span class="line">  &#125;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最后，在learning_tf下新建launch文件turtle_tf_demo.launch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">  &lt;launch&gt;</span><br><span class="line">    &lt;!-- 启动海龟仿真，光这一个就可以生成一个海龟turtle1--&gt;</span><br><span class="line">    &lt;node pkg&#x3D;&quot;turtlesim&quot; type&#x3D;&quot;turtlesim_node&quot; name&#x3D;&quot;sim&quot;&#x2F;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 启动键盘控制海龟运动--&gt;</span><br><span class="line">    &lt;node pkg&#x3D;&quot;turtlesim&quot; type&#x3D;&quot;turtle_teleop_key&quot; name&#x3D;&quot;teleop&quot; output&#x3D;&quot;screen&quot;&#x2F;&gt;</span><br><span class="line">    &lt;!-- Axes --&gt;</span><br><span class="line">    &lt;param name&#x3D;&quot;scale_linear&quot; value&#x3D;&quot;2&quot; type&#x3D;&quot;double&quot;&#x2F;&gt;</span><br><span class="line">    &lt;param name&#x3D;&quot;scale_angular&quot; value&#x3D;&quot;2&quot; type&#x3D;&quot;double&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 启动两个turtle的广播--&gt;</span><br><span class="line">&lt;!-- pkg是报名,type是boardcaster.cpp编译CMakeLists里面编译的可执行文件的名字--&gt;</span><br><span class="line">&lt;!-- args就是传递的参数--&gt;</span><br><span class="line">&lt;!-- name就是运行时节点的名字，本来一开始ros::init里面有名字，这里会把那个覆盖--&gt;</span><br><span class="line">&lt;!-- 但是，这里name也是必须的，不能删除，同时,ros::init初始化那里也不能删除</span><br><span class="line">感觉就是一个占位的，反正这里也会把它进行覆盖--&gt;</span><br><span class="line">    &lt;node pkg&#x3D;&quot;learning_tf&quot; type&#x3D;&quot;turtle_tf_broadcaster&quot;</span><br><span class="line">          args&#x3D;&quot;&#x2F;turtle1&quot; name&#x3D;&quot;turtle1_tf_broadcaster&quot; &#x2F;&gt;</span><br><span class="line">    &lt;node pkg&#x3D;&quot;learning_tf&quot; type&#x3D;&quot;turtle_tf_broadcaster&quot;</span><br><span class="line">          args&#x3D;&quot;&#x2F;turtle2&quot; name&#x3D;&quot;turtle2_tf_broadcaster&quot; &#x2F;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!--启动监听节点，观察发现，这里就没有args参数，是因为这里不需要进行参数的传递前面是需要得到turtle在世界坐标系的位置并发布出去需要传递turtle的名字进去--&gt;</span><br><span class="line">    &lt;node pkg&#x3D;&quot;learning_tf&quot; type&#x3D;&quot;turtle_tf_listener&quot;</span><br><span class="line">          name&#x3D;&quot;listener&quot; &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;launch&gt;</span><br></pre></td></tr></table></figure><p>最后在CMakeLists.txt中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">add_executable(turtle_tf_broadcaster src&#x2F;turtle_tf_broadcaster.cpp)</span><br><span class="line">target_link_libraries(turtle_tf_broadcaster $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line"></span><br><span class="line">add_executable(turtle_tf_listener src&#x2F;turtle_tf_listener.cpp)</span><br><span class="line">target_link_libraries(turtle_tf_listener $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> TF坐标转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu16.04升级vscode</title>
      <link href="/2020/07/14/ubuntu16-04%E5%8D%87%E7%BA%A7vscode/"/>
      <url>/2020/07/14/ubuntu16-04%E5%8D%87%E7%BA%A7vscode/</url>
      
        <content type="html"><![CDATA[<p>ubuntu不同于windows，无法直接使用软件升级。<br>可以使用命令行来升级vscode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;vscode-update.azurewebsites.net&#x2F;latest&#x2F;linux-deb-x64&#x2F;stable -O &#x2F;tmp&#x2F;code_latest_amd64.deb</span><br><span class="line"></span><br><span class="line">sudo dpkg -i &#x2F;tmp&#x2F;code_latest_amd64.deb</span><br></pre></td></tr></table></figure><p>本命令会将.deb文件包下载到 /tmp目录下。安装完成后，可以进入该目录进行删除</p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己写srv文件vscode提示找不到文件</title>
      <link href="/2020/07/14/%E8%87%AA%E5%B7%B1%E5%86%99srv%E6%96%87%E4%BB%B6vscode%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0%E6%96%87%E4%BB%B6/"/>
      <url>/2020/07/14/%E8%87%AA%E5%B7%B1%E5%86%99srv%E6%96%87%E4%BB%B6vscode%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>在学习古月居的教程中，提到，不同于消息通信，服务通信过程中服务的数据类型需要自己定义。节点并不提供标准服务类型。服务类型的定义文件一般是：*.srv为扩展名，且一般都放在功能包下的srv文件夹目录。ros中的服务数据可以通过srv文件进行语言无关的接口定义。一般写在功能包的srv目录。目的是client输入两个数，server返回这两个数相加的结果,下面是实践:</p><p>本地环境： ubuntu16.04 + ROS kinetic</p><p>1.在一个catkin_ws/src 下，创建一个pkg:<br><code>catkin_create_pkg learning_communication roscpp rospy</code><br>依赖会被默认写到功能包的CMakeLists.txt和package.xml中</p><p>2.创建自定义服务数据结构在learning_communication/srv 下创建 AddTwoInts.srv文件，文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int64 a</span><br><span class="line">int64 b</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">int64 sum</span><br></pre></td></tr></table></figure><p>中间用’—‘隔开，上面的client的数据结构，下面是 server的数据结构</p><p><font color=red>注：定义好服务数据结构后，要想让服务类型在c++,python中使用，必须要做相应的编译与运行配置。<br>编译依赖message_generation<br>运行依赖message_runtime<br></font></p><p>本文为了方便演示，只说在vscode等下，找不到自定义数据结构的情况，所以server, client的源代码只包含头文件进行测试。</p><a id="more"></a><p>server.cpp的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;ros&#x2F;ros.h&gt;</span><br><span class="line">#include &quot;learning_communication&#x2F;AddTwoInts.h&quot;            </span><br><span class="line">int main()&#123;&#125;</span><br></pre></td></tr></table></figure><p>client.cpp的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;ros&#x2F;ros.h&gt;</span><br><span class="line">#include &quot;learning_communication&#x2F;AddTwoInts.h&quot;</span><br><span class="line">int main()&#123;&#125;</span><br></pre></td></tr></table></figure><font color=red>注： 以上的AddTwoInts.h 本来没有这个头文件，但根据作者的解释说，该头文件根据我们之前创建的服务数据类型AddTwoInts.srv自动创建，但是，后来经过测试，还是没有找到这个头文件，这里不报错，不知道是为什么。</font><p>接着打开package.xml (这里，这里打开的是包learning_communication下的package.xml, 后面的CMakeLists.txt也是， catkin_ws工作空间下的CMakeLists.txt是锁死了的，无法进行更改)<br>在<build_depend> 附近添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;build_depend&gt;message_generation&lt;&#x2F;build_depend&gt;   </span><br><span class="line">&lt;exec_depend&gt;message_runtime&lt;&#x2F;exec_depend&gt;</span><br></pre></td></tr></table></figure><blockquote><p>根据上文所说，这里添加这两个编译与运行依赖<br>这里：原书下面写的是run_depend,经过测试，无法运行，会报错<br>这里添加的这两行目前还不清楚是什么意思，但是，发现，如果不自定义的话，package.xml这个文件是不需要进行修改的，只要在create_pkg 把需要添加的依赖全部添加到，这个xml会自动进行生成的.</p></blockquote><p>接着打开CMakeLists.txt<br>在一开始的find_package那里的末尾添加为这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">find_package(catkin REQUIRED COMPONENTS</span><br><span class="line">  roscpp</span><br><span class="line">  rospy</span><br><span class="line">  message_generation      &#x2F;&#x2F;根据上文所述，这里添加这个</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>在find_package的下面添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">add_service_files(FILES AddTwoInts.srv)</span><br><span class="line"></span><br><span class="line">generate_messages(</span><br><span class="line">    DEPENDENCIES</span><br><span class="line">    std_msgs      &#x2F;&#x2F;经过测试，这个也可以不要</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>再在末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add_executable(server src&#x2F;server.cpp)</span><br><span class="line">add_dependencies(server $&#123;PROJECT_NAME&#125;_gencpp)</span><br><span class="line">target_link_libraries(server $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line"></span><br><span class="line">add_executable(client src&#x2F;client.cpp)</span><br><span class="line">add_dependencies(client $&#123;PROJECT_NAME&#125;_gencpp)</span><br><span class="line">target_link_libraries(client $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure><font color=blue>注：查阅资料说，generate_messages 那段的作用是自动创建我们自定义的消息类型      *.msg与*.srv相对应的*.h. 且由于前面我们定义的srv那里有int64，使用了std_msgs。所以这里添加了std_msgs 但是，经过测试，这里注释了好像没有影响。</font><p>上述做完了，检验自定义的数据结构是否被识别<br><code>rossrv show learning_communication/AddTwoInts</code><br>若正常显示我们定义的结果就说明成功</p><p>以上就是c++ 在linux下的标准编译链接过程</p><blockquote><p>add_executable(server src/server.cpp)   //这个意思是用于设置需要编译的代码和生成的可执行文件(cpp)，第一个参数是希望生成的可执行文件名称，后面的是需要编译的文件路径</p></blockquote><blockquote><p>add_dependencies(server ${PROJECT_NAME}_gencpp) //用于设置依赖，我们在许多应用中，需要定义与语言无关的消息类型，消息类型会在编译过程中产生相应语言的代码，生成python就是_genpy</p></blockquote><blockquote><p>target_link_libraries(server ${catkin_LIBRARIES})  //用于设置链接库，有时候需要第三方的库函数。 第一个跟上面一样，是可执行文件的名字。 第二个是需要链接的库，这里不需要第三方库，使用默认链接库即可。</p></blockquote><p>这样弄了后， <code>catkin_make</code> 就会成功，接着打开vscode， 就不会提示找不到文件了.</p><p>以下是完整代码<br><strong>server.cpp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include &quot;ros&#x2F;ros.h&quot;</span><br><span class="line">#include &quot;learning_communication&#x2F;AddTwoInts.h&quot;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; service回调函数，输入参数req，输出参数res这里目前的运行机制还不是特别明白，为什么add输入参数啥也没有，为什么这里就接收到了?</span><br><span class="line">bool add(learning_communication::AddTwoInts::Request  &amp;req,</span><br><span class="line">         learning_communication::AddTwoInts::Response &amp;res)</span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F; 将输入参数中的请求数据相加，结果放到应答变量中</span><br><span class="line">  res.sum &#x3D; req.a + req.b;</span><br><span class="line">  ROS_INFO(&quot;request: x&#x3D;%ld, y&#x3D;%ld&quot;, (long int)req.a, (long int)req.b);</span><br><span class="line">  ROS_INFO(&quot;sending back response: [%ld]&quot;, (long int)res.sum);</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F;计算成功后，返回true</span><br><span class="line">  return true;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F; ROS节点初始化</span><br><span class="line">  ros::init(argc, argv, &quot;add_two_ints_server&quot;);</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F; 创建节点句柄</span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line"> </span><br><span class="line">  &#x2F;&#x2F; 创建一个名为add_two_ints的server，注册回调函数add(),这个服务在ROS网络中医名称作为唯一标识，任何节点都可以通关这个名字来使用这个服务.</span><br><span class="line">  然后问题跟上面的一样，为什么这里add里面什么都没有输入，但是,add函数实现的时候，却有参数？</span><br><span class="line">  ros::ServiceServer service &#x3D; n.advertiseService(&quot;add_two_ints&quot;, add);</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F; 循环等待回调函数</span><br><span class="line">  ROS_INFO(&quot;Ready to add two ints.&quot;);</span><br><span class="line">  ros::spin();   &#x2F;&#x2F;这里不能使用ros::spinonce()这样的话，这个程序根本不会执行下去</span><br><span class="line"> </span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>client.cpp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &quot;ros&#x2F;ros.h&quot;</span><br><span class="line">#include &quot;learning_communication&#x2F;AddTwoInts.h&quot;</span><br><span class="line"> </span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F; ROS节点初始化</span><br><span class="line">  ros::init(argc, argv, &quot;add_two_ints_client&quot;);</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F; 从终端命令行获取两个加数</span><br><span class="line">  &#x2F;&#x2F;如果输入格式不是 rosrun learning_communication 3 5这种格式的话</span><br><span class="line">  if (argc !&#x3D; 3)</span><br><span class="line">  &#123;</span><br><span class="line">    ROS_INFO(&quot;usage: add_two_ints_client X Y&quot;);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  &#x2F;&#x2F; 创建节点句柄</span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line">  </span><br><span class="line">  &#x2F;*创建一个client，请求add_two_int service，service消息类型是learning_communication::AddTwoInts</span><br><span class="line">  *&#x2F;</span><br><span class="line">  ros::ServiceClient client &#x3D; n.serviceClient&lt;learning_communication::AddTwoInts&gt;(&quot;add_two_ints&quot;);</span><br><span class="line">  </span><br><span class="line">  &#x2F;* 创建learning_communication::AddTwoInts类型的service消息</span><br><span class="line">     定义了一个learning_communication::AddTwoInts 服务类型的对象，该对象的成员就是先前定义的a, b, sum这些。我们将待请求的数据填充到数据成员a,b中，经过server的计算，sum就会被自动进行填充</span><br><span class="line">  *&#x2F;</span><br><span class="line">  learning_communication::AddTwoInts srv;</span><br><span class="line">  srv.request.a &#x3D; atoll(argv[1]);</span><br><span class="line">  srv.request.b &#x3D; atoll(argv[2]);</span><br><span class="line">  </span><br><span class="line">  &#x2F;* 发布service请求，等待加法运算的应答结果</span><br><span class="line">     也就是使用前面的client 实例，调用call方法来向service发起请求，传入的数据参数就是srv</span><br><span class="line">  *&#x2F;</span><br><span class="line">  if (client.call(srv))</span><br><span class="line">  &#123;</span><br><span class="line">    ROS_INFO(&quot;Sum: %ld&quot;, (long int)srv.response.sum);</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">    ROS_ERROR(&quot;Failed to call service add_two_ints&quot;);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>一个node可以发布，接收多个消息，服务。所以对于client来说，请求的是服务名，而不是服务节点的名字。所以这里ros::ServiceClient client = n.serviceClient&lt;learning_communication::AddTwoInts&gt;(&quot;add_two_ints&quot;);是创建一个client对象，用来向名字叫add_two_ints的服务发起请求。</code></pre><blockquote><p>注： 在client.cpp 中的&gt;  if (argc != 3)<br>在c系列语言中 argc 是输入的参数个数， argv是字串串指针<br>如果这样输入: rosrun learning_communication client 3 5<br>那么argc=3<br>第一个参数是 ***/catkin_ws/devel/lib/learning_communication/client<br>第二个参数是 3<br>第三个参数是5<br>要想打印的话可以使用: <code>printf(&quot;%s&quot;,argv[1])</code></p></blockquote><p>补充：linux 下c++的atoi, atol, atoll, atof</p><blockquote><p>atoi 将字符串转化为int类型变量<br>atol 将字符串转换为long类型变量<br>atoll 将字符串转化为long long 类型变量<br>atof 将字符串转化为double类型变量<br>详细使用见: <a href="https://my.oschina.net/Tsybius2014/blog/338234?p=1" target="_blank" rel="noopener">linux下上述的调用示例</a></p></blockquote><p>运行前需要先: </p><blockquote><p>cd catkin_ws<br>source devel/setup.bash</p></blockquote><p>运行结果，server会一直等待，client执行一次就会终止<br><img src="/image/srv.png" alt="运行结果图"></p><p>大致流程图<br><img src="/image/server-client-process.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> srv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装win10-ubuntu双系统</title>
      <link href="/2020/07/13/%E5%AE%89%E8%A3%85win10-ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/07/13/%E5%AE%89%E8%A3%85win10-ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>目标：安装win10,ubuntu16.04双系统</p><a id="more"></a><p>ubuntu只支持gpt格式，而启动方式一般有：</p><blockquote><p>legacy<br>uefi<br>legacy+uefi 混合模式</p></blockquote><p>而ubuntu系统，只支持uefi模式，所以bios中，只能设置:uefi,legacy+uefi 混合模式所</p><p>而win10一般的模式时: uefi+gpt<br>如果安装的时候，先安装的win10硬盘分区的时候，格式是mbr, 那么在bios中只能设置为legacy, 这样的话，即使安装了ubuntu，这下，这两个就不能同时启动了。</p><p>安装步骤：</p><ol><li>进入iso安装步骤，进入到<br><img src="/image/ubuntu-win10-1.jpg" alt=""></li></ol><p>找到空闲分区<br>/swap : 设置为与内存一致 逻辑分区 交换空间</p><p>efi  :800m  逻辑分区 efi系统分区</p><p>/:     安装系统和软件 主分区 ex4文件系统</p><p>/home  :剩下的所有 相当于其他盘 可以不要 逻辑分区<br>ex4文件系统</p><p>下面的安装启动项的位置为efi前面的sd号</p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode配置ros时提示找不到ros/ros.h</title>
      <link href="/2020/07/13/vscode%E9%85%8D%E7%BD%AEros%E6%97%B6%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0ros-ros-h/"/>
      <url>/2020/07/13/vscode%E9%85%8D%E7%BD%AEros%E6%97%B6%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0ros-ros-h/</url>
      
        <content type="html"><![CDATA[<p>在安装vscode后，打开一个catkin_ws后#include&lt;ros/ros.h&gt;<br>经常会出现找不到ros/ros.h的情况<br>解决办法：<br>在vscode中打开c_cpp_properties.json<br>在includePath中添加”/opt/ros/kinetic/include/*”   ，也就是本地安装的ros路径</p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> vscode </tag>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用system备份ubuntu生成iso镜像</title>
      <link href="/2020/07/13/%E4%BD%BF%E7%94%A8system%E5%A4%87%E4%BB%BDubuntu%E7%94%9F%E6%88%90iso%E9%95%9C%E5%83%8F/"/>
      <url>/2020/07/13/%E4%BD%BF%E7%94%A8system%E5%A4%87%E4%BB%BDubuntu%E7%94%9F%E6%88%90iso%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<p>本地环境： ubuntu16.04<br>1 安装Systemback</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo add-apt-repository ppa:nemh&#x2F;systemback</span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install systemback unionfs-fuse</span><br></pre></td></tr></table></figure><a id="more"></a><p>2 使用Systemback生成镜像文件<br>(1)打开软件，输入密码<br><img src="/image/live_system_create.png" alt="live_system_create"></p><p>(2)勾选左侧的include the user data files（包含用户数据文件），这样自己主文件夹内的文件都会被包含在系统镜像中。很多相关的程序的配置文件都是保存在主文件夹内的。Working Directory是设置工作目录，程序运行时产生的临时文件都会被保存在这里。所以一定要保证这里有足够的存储空间。</p><p><img src="/image/create_new.png" alt="create_new"></p><p>3 压缩系统镜像<br>Systemback在使用时会发现当生成的sblive文件大于4G的时候是没有办法生成iso文件的。这是由于iso文件自身的限制，iso9600对于文件有限制，单个文件不能超过2G，总的iso文件不能超过4G。<br>所以当上面生成的系统镜像如果大于4G，不能直接转存为iso文件，就要使用采用udf文件系统压缩再转存为光盘文件，下面就是具体的解决方法了。<br>进入计算机的home文件夹，可以看到这里面有一个systemback生成的文件 ****.sblive</p><p>3.1 解压 .sblive 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir sblive</span><br><span class="line">tar -xf &#x2F;home&#x2F;systemback_live_2018-10-15.sblive -C sblive   &#x2F;&#x2F;这里换成你自己的文件名</span><br></pre></td></tr></table></figure><p>3.2重命名syslinux 至 isolinux：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv sblive&#x2F;syslinux&#x2F;syslinux.cfg sblive&#x2F;syslinux&#x2F;isolinux.cfg</span><br><span class="line">mv sblive&#x2F;syslinux sblive&#x2F;isolinux</span><br></pre></td></tr></table></figure><p>3.3 安装 cdtools</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install aria2</span><br><span class="line"></span><br><span class="line">aria2c -s 10 https:&#x2F;&#x2F;nchc.dl.sourceforge.net&#x2F;project&#x2F;cdrtools&#x2F;alpha&#x2F;cdrtools-3.02a07.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvf cdrtools-3.02a07.tar.gz</span><br><span class="line"></span><br><span class="line">cd cdrtools-3.02</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>3.4生成ISO文件：<br><code>/opt/schily/bin/mkisofs -iso-level 3 -r -V sblive -cache-inodes -J -l -b isolinux/isolinux.bin -no-emul-boot -boot-load-size 4 -boot-info-table -c isolinux/boot.cat -o sblive.iso sblive</code><br>同样的，这里名字改成你自己的文件名</p><p>3.5最终生成iso镜像<br><img src="/image/iso.png" alt="生成了iso镜像"></p><p>现在的镜像就可以直接进行安装了，但是，经过测试发现，这样备份的系统，如果原来已经安装了nvidia，wifi等驱动，那么这里也会进行备份，然后就会造成换了新电脑，导致循环进入桌面，猜测是由于驱动的不兼容造成的，所以，最好的结果还是在备份系统之前，最好不要安装显卡驱动等，避免造成不必要的麻烦。</p><p>参考链接：<a href="https://www.cnblogs.com/Pan-xi-yi/p/11830789.html" target="_blank" rel="noopener">目前来看这个行得通</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 备份 </tag>
            
            <tag> iso </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo以及markdown常见语法</title>
      <link href="/2020/07/13/hexo%E4%BB%A5%E5%8F%8Amarkdown%E5%B8%B8%E8%A7%81%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/07/13/hexo%E4%BB%A5%E5%8F%8Amarkdown%E5%B8%B8%E8%A7%81%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h1><p><code>hexo g</code> 生成<br><code>hexo s</code> 预览</p><p>定义多个标签<br><code>tags: [,,,]</code></p><a id="more"></a><h1 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h1><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题 </span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br></pre></td></tr></table></figure><p>插入图片：<br>1.本地图片<br>在与_posts同级的目录，新建一个image文件夹专门用来存储image，拷贝图片到该路径<br>格式1: <code>![文件描述](/image/***)</code><br>格式2：<code>&lt;img src=&quot;/image/link_origin_1.png&quot; width=&quot;600px&quot; height=&quot;500px&quot;&gt;</code><br>格式3: <code>&lt;img src=&quot;/image/link_origin_3.png&quot; width=&quot;50%&quot; height=&quot;50%&quot;&gt;</code><br>更改字体颜色：</p><blockquote><p><font color=red>****</font></p></blockquote><blockquote><p>多行文本框<br>每行开头空四格<br>  我在北京</p></blockquote><p>设置单元格<br>制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行</p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr><tr><td>-: 设置内容和标题栏居右对齐。</td><td></td></tr><tr><td>:- 设置内容和标题栏居左对齐。</td><td></td></tr><tr><td>:-: 设置内容和标题栏居中对齐。</td><td></td></tr></tbody></table><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">-: 设置内容和标题栏居右对齐。</span><br><span class="line">:- 设置内容和标题栏居左对齐。</span><br><span class="line">:-: 设置内容和标题栏居中对齐。</span><br><span class="line"></span><br><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><p>参看：<a href="http://xianbai.me/learn-md/index.html" target="_blank" rel="noopener">markdown详细资料</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下通过hexo搭建github博客(无域名)</title>
      <link href="/2020/07/13/windows%E4%B8%8B%E9%80%9A%E8%BF%87hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2-%E6%97%A0%E5%9F%9F%E5%90%8D/"/>
      <url>/2020/07/13/windows%E4%B8%8B%E9%80%9A%E8%BF%87hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2-%E6%97%A0%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装git和node-js"><a href="#1-安装git和node-js" class="headerlink" title="1.安装git和node.js"></a>1.安装<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>和<a href="https://git-scm.com/" target="_blank" rel="noopener">node.js</a></h1><h1 id="2-配置-ssh-keys"><a href="#2-配置-ssh-keys" class="headerlink" title="2.配置 ssh keys"></a>2.配置 ssh keys</h1><h2 id="1-检查电脑是否有key"><a href="#1-检查电脑是否有key" class="headerlink" title="(1)检查电脑是否有key"></a>(1)检查电脑是否有key</h2><p><code>$ cd ~/.ssh</code><br>如果显示”no such file”，则说明没有</p><h2 id="2-生成新的ssh-key"><a href="#2-生成新的ssh-key" class="headerlink" title="(2)生成新的ssh key"></a>(2)生成新的ssh key</h2><p><code>$ ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot;</code><br>一路回车</p><a id="more"></a><h2 id="3-添加ssh-key-到github"><a href="#3-添加ssh-key-到github" class="headerlink" title="(3)添加ssh key 到github"></a>(3)添加ssh key 到github</h2><p>打开上述路径复制id_rsa.pub的内容，登陆github(Settings—SSH and GPG keys—New SSH key)</p><h2 id="4-测试"><a href="#4-测试" class="headerlink" title="(4)测试"></a>(4)测试</h2><p><code>$ ssh -T git@github.com</code><br>然后输入yes回车，如果有设置密码的话会提示输入密码，没有的则跳过。<br>最后出现successful就成功了</p><h2 id="5-完善个人信息"><a href="#5-完善个人信息" class="headerlink" title="(5)完善个人信息"></a>(5)完善个人信息</h2><p><code>$ git config --global user.name &quot;wuyalan&quot;//输入注册时的username$ git config --global user.email  &quot;alan.wyl@foxmail.com&quot;//填写注册邮箱</code></p><h1 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h1><p><code>$ npm install -g hexo-cli</code><br>通过查看版本号查看是否安装成功<br><code>$ hexo version</code></p><h1 id="4-创建工作目录"><a href="#4-创建工作目录" class="headerlink" title="4.创建工作目录"></a>4.创建工作目录</h1><p>命名一个工作路径<br><code>$ hexo init</code> 这里会创建hexo需要的所有文件到这个文件路径</p><p>安装依赖包<br><code>npm install</code></p><p>确保git部署<br><code>$ npm install hexo-deployer-git --save</code></p><h1 id="5-查看，更新，上传"><a href="#5-查看，更新，上传" class="headerlink" title="5.查看，更新，上传"></a>5.查看，更新，上传</h1><p><code>$ hexo g  //每次进行相应改动都要hexo g 生成一下</code><br><code>$ hexo s  //启动服务预览</code><br>此时在浏览器中输入：<code>localhost:4000</code>可以进行预览<br><code>$ hexo g -d</code> 上传到github上</p><h1 id="6-更改主题"><a href="#6-更改主题" class="headerlink" title="6.更改主题"></a>6.更改主题</h1><p>在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网</a><br>找到一个主题后，进入其github目录,复制clone<br>打开终端：<code>gic clone ****  themes/主题名字</code><br>clone完毕后<br>进入项目，找到_config.yml 搜索theme 将其改成下载的样式名字，在看效果</p><p>参考链接：<a href="https://zhuanlan.zhihu.com/p/80142778" target="_blank" rel="noopener">知乎github+hexo搭建个人博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2020/07/13/test/"/>
      <url>/2020/07/13/test/</url>
      
        <content type="html"><![CDATA[<p>测试时中山东莞深度</p><p><code>dfsdgsg int main</code><br>$\alpha+\beta=\gamma$</p><p>$\alpha+\beta=\gamma$</p>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 123 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/07/13/hello-world/"/>
      <url>/2020/07/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 123 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
